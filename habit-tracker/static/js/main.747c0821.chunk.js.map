{"version":3,"sources":["dateFormatter.tsx","dataStore.tsx","usersContext.tsx","users/index.tsx","user/habitsContext.tsx","user/calendarButton.tsx","user/calendarDay/index.tsx","user/calendarMonth/calendarMonthDay.tsx","user/calendarMonth/index.tsx","user/calendarYear/index.tsx","user/habitList/habit.tsx","user/habitList/index.tsx","user/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getYear","date","getFullYear","getMonth","getDay","getDate","formatDate","prefix","getItem","key","defaultValue","localStorage","setItem","value","getCompletedHabits","userId","JSON","parse","UsersContext","createContext","createNewUser","userList","UsersProvider","props","useState","setUserList","Provider","name","list","uuidv4","stringify","saveUserList","children","Users","username","setUsername","useContext","className","map","u","to","onSubmit","e","preventDefault","type","onChange","currentTarget","placeholder","required","HabitsContext","habitList","createHabit","title","color","repeat","updateHabit","habit","HabitsProvider","useParams","getHabitList","setHabitList","useEffect","saveHabitList","filter","h","d","id","t","c","r","index","findIndex","slice","CalendarButton","userBaseUrl","UserBaseUrlContext","Date","icon","faCalendar","CalendarDay","yearString","year","monthString","month","dayString","day","Number","previous","setDate","next","completed","setCompleted","toggleCompleted","habitId","indexOf","updated","saveCompletedHabits","faAngleLeft","toLocaleString","weekday","faAngleRight","charAt","style","background","onClick","faCheckSquare","faSquare","CalendarMonthDay","today","prevMonth","nextMonth","backgroundColor","CalendarMonth","monthIndex","days","i","push","setMonth","faBars","v","CalendarYear","weekdayToHabitCount","forEach","months","length","data","m","firstDay","toLocaleDateString","width","Habit","find","pickerOpen","setPickerOpen","window","confirm","faTimes","target","faPaintBrush","disableAlpha","hex","defaultColors","HabitList","UserNameContext","User","useRouteMatch","path","url","user","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747c0821.chunk.js","sourcesContent":["export const getYear = (date: Date) => date.getFullYear();\nexport const getMonth = (date: Date) => (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1);\nexport const getDay = (date: Date) => (date.getDate() < 10 ? '0' : '') + date.getDate();\n\nexport const formatDate = (date: Date) => `${getYear(date)}-${getMonth(date)}-${getDay(date)}`;\n","import { formatDate } from './dateFormatter';\n\nexport type Habit = {\n  id: string;\n  t: string;\n  c: string;\n  r: string;\n  d: string;\n}\n\nconst prefix = \"hl-\";\nconst getItem = (key: string, defaultValue: string = '') => localStorage.getItem(prefix + key) || defaultValue;\nconst setItem = (key: string, value: string) => localStorage.setItem(prefix + key, value);\n\nexport const getUserList: () => [string, string][] = () =>\n  JSON.parse(getItem('user-list', '[]'));\n\nexport const saveUserList = (userList: [string, string][]) => {\n  setItem('user-list', JSON.stringify(userList));\n}\n\nexport const getHabitList: (userId: string) => Habit[] = userId =>\n  JSON.parse(getItem(`${userId} habit-list`) || '[]');\n\nexport const saveHabitList = (userId: string, habitList: Habit[]) => {\n  setItem(`${userId} habit-list`, JSON.stringify(habitList));\n}\n\nexport const getCompletedHabits: (userId: string, date: Date) => string[] = (userId, date) =>\n  JSON.parse(getItem(`${userId} ${formatDate(date)}`) || '[]');\n\nexport const saveCompletedHabits = (userId: string, date: Date, completed: string[]) => {\n  setItem(`${userId} ${formatDate(date)}`, JSON.stringify(completed));\n}\n","import React, { FunctionComponent, createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getUserList, saveUserList } from './dataStore';\n\nexport const UsersContext = createContext<{\n  createNewUser: (name: string) => void,\n  userList: [string, string][]\n}>({\n  createNewUser: () => {},\n  userList: []\n});\n\nexport const UsersProvider: FunctionComponent = (props) => {\n  \n  const [userList, setUserList] = useState<[string, string][]>(getUserList()); \n\n  const createNewUser = (name: string) => {\n    const list: [string, string][] = [...userList, [name, uuidv4()]];\n    setUserList(list);\n    saveUserList(list);\n  }\n\n  return (\n    <UsersContext.Provider value={{\n      createNewUser,\n      userList\n    }}>\n      { props.children }\n    </UsersContext.Provider>\n  );\n}\n","import React, { useState, FormEvent, ChangeEvent, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './index.css';\nimport { UsersContext } from '../usersContext';\n\nconst Users = () => {\n  const [username, setUsername] = useState<string>('');\n  const { createNewUser, userList } = useContext(UsersContext);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    createNewUser(username);\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsername(e.currentTarget.value);\n  }\n\n  return (\n    <div className=\"user-list\">\n      { userList.map(u => (<Link className=\"user-link link-button\" key={u[1]} to={`user/${u[1]}`}>{u[0]}</Link>)) }\n      <form className=\"create-user-form\" onSubmit={handleSubmit}>\n        <input className=\"username-input\" type=\"text\" name=\"username\" onChange={handleInputChange} value={username} placeholder=\"New User\" required />\n        <button className=\"create-user\" type=\"submit\">Create</button>\n      </form>\n    </div>\n  )\n};\n\nexport default Users;\n","import React, { FunctionComponent, createContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Habit, getHabitList, saveHabitList } from '../dataStore';\n\nexport const HabitsContext = createContext<{\n  habitList: Habit[],\n  createHabit: (title: string, color: string, repeat: string) => void,\n  updateHabit: (habit: Habit) => void\n}>({\n  habitList: [],\n  createHabit: (title, color, repeat) => {},\n  updateHabit: habit => {}\n});\n\nexport const HabitsProvider: FunctionComponent = (props) => {\n  \n  const { userId } = useParams<{ userId: string }>();\n  const [ habitList, setHabitList ] = useState<Habit[]>(getHabitList(userId));\n\n  useEffect(() => {\n    saveHabitList(userId, habitList);\n  }, [userId, habitList]);\n\n  return (\n    <HabitsContext.Provider value={{\n      habitList: habitList.filter(h => h.d !== 't'),\n      createHabit: (title, color, repeat) => {\n        setHabitList([...habitList, { id: uuidv4(), t: title, c: color, r: repeat, d: 'f' }]);\n      },\n      updateHabit: habit => {\n        const index = habitList.findIndex(h => h.id === habit.id);\n        setHabitList([...habitList.slice(0, index), habit, ...habitList.slice(index + 1)]);\n      }\n    }}>\n      { props.children }\n    </HabitsContext.Provider>\n  )\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons'\nimport { UserBaseUrlContext } from './';\nimport { getYear, getMonth } from '../dateFormatter';\n\nconst CalendarButton = () => {\n  const userBaseUrl = useContext(UserBaseUrlContext);\n\n  return (\n    <Link\n      className=\"plain-link calendar-button\"\n      to={`${userBaseUrl}/calendar/${getYear(new Date())}/${getMonth(new Date())}`}\n    >\n      <FontAwesomeIcon icon={ faCalendar } />\n    </Link>\n  );\n}\n\nexport default CalendarButton;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport './index.css';\nimport { HabitsContext } from '../habitsContext';\nimport { UserBaseUrlContext } from '../';\nimport { getCompletedHabits, saveCompletedHabits } from '../../dataStore';\nimport { getYear, getMonth, getDay } from '../../dateFormatter';\nimport CalendarButton from '../calendarButton';\n\nconst CalendarDay = () => {\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { userId, year: yearString, month: monthString, day: dayString } = useParams<{ userId: string, year: string, month: string, day: string }>();\n  const day = new Date(Number(yearString), Number(monthString) - 1, Number(dayString));\n  const previous = new Date(day);\n  previous.setDate(previous.getDate() - 1);\n  const next = new Date(day);\n  next.setDate(next.getDate() + 1);\n\n  const { habitList } = useContext(HabitsContext);\n  const [ completed, setCompleted ] = useState<string[]>(getCompletedHabits(userId, day));\n\n  useEffect(() => {\n    setCompleted(getCompletedHabits(userId, new Date(Number(yearString), Number(monthString) - 1, Number(dayString))));\n  }, [userId, yearString, monthString, dayString]);\n\n  const toggleCompleted = (habitId: string) => {\n    const index = completed.indexOf(habitId);\n    const updated = index >= 0 ? [...completed.slice(0, index), ...completed.slice(index + 1)] : [...completed, habitId];\n    setCompleted(updated);\n    saveCompletedHabits(userId, day, updated);\n  }\n\n  return (\n    <div className=\"container\">\n      <CalendarButton />\n      <div className=\"container-header\">\n        <Link className=\"link-button nav-link\" to={`${userBaseUrl}/calendar/${getYear(previous)}/${getMonth(previous)}/${getDay(previous)}`}><FontAwesomeIcon icon={faAngleLeft}/></Link>\n        <Link className=\"plain-link\" to={`${userBaseUrl}/${getYear(day)}/${getMonth(day)}`}>\n          <div className=\"calendar-day-date\">{ day.toLocaleString('default', { month: 'short', year: 'numeric', day: 'numeric' }) }</div>\n          <div className=\"calendar-day-weekday\">{ day.toLocaleString('default', { weekday: 'long' }) }</div>\n        </Link>\n        <Link className=\"link-button nav-link\" to={`${userBaseUrl}/calendar/${getYear(next)}/${getMonth(next)}/${getDay(next)}`}><FontAwesomeIcon icon={faAngleRight}/></Link>\n      </div>\n      { habitList.filter(h => h.r.charAt(day.getDay()) === 't').map(h => (\n        <div\n          key={h.id}\n          className=\"calendar-day-habit\"\n          style={completed.indexOf(h.id) < 0 ? { background: `linear-gradient(-35deg, ${h.c + '25'}, ${h.c + '50'} 33%, ${h.c + '50'} 66%, ${h.c + '25'})` } : { background: h.c }}\n          onClick={() => toggleCompleted(h.id)} >\n          <span className=\"calendar-day-habit-title\">{h.t}</span>\n          <FontAwesomeIcon className=\"calendar-day-icon\" icon={ completed.indexOf(h.id) >= 0 ? faCheckSquare : faSquare }/>\n        </div>\n      ))}\n    </div>\n  )\n};\n\nexport default CalendarDay;\n","import React, { useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './calendarMonthDay.css';\nimport { HabitsContext } from '../habitsContext';\nimport { UserBaseUrlContext } from '..';\nimport { getYear, getMonth, getDay, formatDate } from '../../dateFormatter';\nimport { getCompletedHabits } from '../../dataStore';\n\ntype Props = {\n  index: Number;\n  day: Date;\n}\n\nconst CalendarMonthDay = ({ index, day }: Props) => {\n  const { userId } = useParams<{ userId: string }>();\n  const { habitList } = useContext(HabitsContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const formattedDate = formatDate(day);\n  const today = formattedDate === formatDate(new Date());\n  const prevMonth = index < 7 && day.getDate() > 7;\n  const nextMonth = day.getDate() + 6 < index;\n  const completed = getCompletedHabits(userId, day);\n\n  day.getDay()\n  return (\n    <Link \n      className={`link-button calendar-month-day${prevMonth ? ' previous-month' : ''}${nextMonth ? ' next-month' : ''}${today ? ' today' : ''}`}\n      to={`${userBaseUrl}/calendar/${getYear(day)}/${getMonth(day)}/${getDay(day)}`}>\n      <div className=\"calendar-month-day-date\">{ day.getDate() }</div>\n      { habitList.filter(h => h.r.charAt(day.getDay()) === 't').map(h => (\n        <div\n          key={h.id}\n          className={`calendar-month-day-habit${ completed.indexOf(h.id) < 0 ? ' incomplete' : ''}`}\n          style={completed.indexOf(h.id) < 0 ? { background: `linear-gradient(-35deg, ${h.c + '25'}, ${h.c + '50'} 33%, ${h.c + '50'} 66%, ${h.c + '25'})` } : { backgroundColor: h.c }}\n        ></div>\n      )) }\n    </Link>\n  );\n}\n\nexport default CalendarMonthDay;","import React, { useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight, faBars } from '@fortawesome/free-solid-svg-icons'\nimport './index.css';\nimport CalendarDay from './calendarMonthDay';\nimport { getYear, getMonth } from '../../dateFormatter';\nimport { UserBaseUrlContext } from '../';\n\nconst CalendarMonth = () => {\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { year: yearString, month: monthString } = useParams<{ year: string, month: string }>();\n  const year = Number(yearString);\n  const monthIndex = Number(monthString) - 1;\n\n  const day = new Date(year, monthIndex, 1);\n  if (day.getDay() > 0) {\n    day.setDate(1 - day.getDay());\n  }\n  const days: Date[] = [];\n  for (let i = 0; i < 42; i++) {\n    days.push(new Date(day));\n    day.setDate(day.getDate() + 1);\n  }\n\n  const prevMonth = new Date(year, monthIndex, 1);\n  prevMonth.setMonth(prevMonth.getMonth() - 1);\n  const nextMonth = new Date(year, monthIndex, 1);\n  nextMonth.setMonth(nextMonth.getMonth() + 1);\n\n  return (\n    <div className=\"calendar-container\">\n      <div className=\"calendar-header\">\n        <Link className='link-button nav-link' to={`${userBaseUrl}/calendar/${getYear(prevMonth)}/${getMonth(prevMonth)}`}><FontAwesomeIcon icon={faAngleLeft}/></Link>\n        <Link className='plain-link' to={`${userBaseUrl}/calendar/${getYear(new Date(year, monthIndex, 1))}`}>{ (new Date(year, monthIndex)).toLocaleString('default', { month: 'long', year: 'numeric' }) }</Link>\n        <Link className='link-button nav-link' to={`${userBaseUrl}/calendar/${getYear(nextMonth)}/${getMonth(nextMonth)}`}><FontAwesomeIcon icon={faAngleRight}/></Link>\n        <Link className='link-button nav-link habit-list-btn' to={`${userBaseUrl}/habit-list`}><FontAwesomeIcon icon={faBars}/></Link>\n      </div>\n      <div className=\"calendar-grid\">\n        {\n          days.map((v, i) => (<CalendarDay key={i} index={i} day={v} />))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default CalendarMonth;","import React, { useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\nimport './index.css';\nimport { getCompletedHabits } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport { HabitsContext } from '../habitsContext';\nimport { getYear, getMonth } from '../../dateFormatter';\nimport CalendarButton from '../calendarButton';\n\nconst CalendarYear = () => {\n  const { habitList } = useContext(HabitsContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { userId, year: yearString } = useParams<{ userId: string, year: string }>();\n  const year = Number(yearString);\n\n  const weekdayToHabitCount = [0, 0, 0, 0, 0, 0, 0];\n  habitList.forEach(({ r }) => {\n    for (let i = 0; i < 7; i++) {\n      if (r[i] === 't') weekdayToHabitCount[i]++;\n    }\n  });\n\n  const day = new Date(year, 0, 1);\n  const months: [number, number][] = [];\n  let monthIndex = 0;\n  while (day.getFullYear() === year) {\n    if (day.getMonth() > monthIndex) monthIndex++;\n    if (!months[monthIndex]) months[monthIndex] = [0, 0];\n    months[monthIndex][0] += weekdayToHabitCount[day.getDay()];\n    months[monthIndex][1] += getCompletedHabits(userId, day).length;\n    day.setDate(day.getDate() + 1);\n  }\n  const data = months.map(m => m[0] > 0 ? (m[1] * 100) / m[0] : 0);\n\n  return (\n    <div className=\"container\">\n      <CalendarButton />\n      <div className=\"container-header\">\n        <Link className=\"link-button nav-link\" to={`${userBaseUrl}/calendar/${year - 1}`}><FontAwesomeIcon icon={faAngleLeft}/></Link>\n        { year }\n        <Link className=\"link-button nav-link\" to={`${userBaseUrl}/calendar/${year + 1}`}><FontAwesomeIcon icon={faAngleRight}/></Link>\n      </div>\n      {\n        data.map((d, i) => {\n          const firstDay = new Date(year, i, 1);\n          return (\n            <Link className=\"calendar-year-month plain-link\" key={i} to={`${userBaseUrl}/calendar/${getYear(firstDay)}/${getMonth(firstDay)}`}>\n              <div>{ firstDay.toLocaleDateString('default', { month: 'long' }) }</div>\n              <div className=\"calendar-year-progress\"><div className=\"calendar-year-progress-bar\" style={{ width: `${data[i]}%` }}></div></div>\n            </Link>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CalendarYear;\n","import React, { useContext, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { faPaintBrush, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { HabitsContext } from '../habitsContext';\nimport './habit.css';\n\nconst Habit = ({ habitId }: { habitId: string } ) => {\n  const { habitList, updateHabit } = useContext(HabitsContext);\n  const habit = habitList.find(v => v.id === habitId);\n  const [ pickerOpen, setPickerOpen ] = useState<boolean>(false);\n\n  if (!habit) return (<div></div>);\n\n  const repeatChanged = (index: number) => {\n    return () => {\n      updateHabit({...habit, r: '' + habit.r.slice(0, index) + (habit.r[index] === 'f' ? 't' : 'f') + habit.r.slice(index + 1)})\n    }\n  }\n\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div className=\"habit\" style={{ backgroundColor: habit.c }}>\n      <div className=\"habit-delete\" onClick={() => { if (window.confirm(`Delete ${habit.t}?`)) { updateHabit({...habit, d: 't'}); } }}><FontAwesomeIcon icon={ faTimes }/></div>\n      <div className=\"habit-header\">\n        <input className=\"habit-title\" type=\"text\" name=\"title\" onChange={e => { updateHabit({...habit, t: e.target.value}) }} value={habit.t} placeholder=\"Title\" />\n        <div className=\"habit-color\">\n          <FontAwesomeIcon className=\"habit-color-button\" icon={ faPaintBrush } onClick={() => { setPickerOpen(!pickerOpen) }}/>\n          <div className={`habit-color-picker${pickerOpen ? ' habit-color-picker-open' : ' habit-color-picker-closed'}`}>\n            <ChromePicker disableAlpha={true} color={habit.c} onChange={({ hex }) => { updateHabit({...habit, c: hex})}}/>\n          </div>\n        </div>\n      </div>\n      <div className=\"habit-repeat\">\n        { daysOfWeek.map((d, i) => (\n          <div className=\"habit-repeat-day\" key={d} onClick={repeatChanged(i)}>\n            <span>{d}</span>\n            <FontAwesomeIcon className=\"habit-repeat-icon\" icon={ habit.r[i] === 't' ? faCheckSquare : faSquare }/>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nexport default Habit;\n","import React, { useContext } from 'react';\nimport './index.css';\nimport { HabitsContext } from '../habitsContext';\nimport Habit from './habit';\nimport CalendarButton from '../calendarButton';\n\nconst defaultColors = [\n  '#FF5353',\n  '#FF8471',\n  '#FEA152',\n  '#FEE895',\n  '#FBFD68',\n  '#B2FD61',\n  '#6AEC5D',\n  '#33E7A6',\n  '#7AE1E7',\n  '#61AAEA',\n  '#3760DD',\n  '#8E6AFA',\n  '#AB3FE1',\n  '#E652BF'\n]\n\nconst HabitList = () => {\n  const { habitList, createHabit } = useContext(HabitsContext);\n\n  return (\n    <div className=\"container\">\n      <CalendarButton />\n      <div className=\"container-header\">Habit List</div>\n      { habitList.map(h => (\n        <Habit key={h.id} habitId={h.id} />\n      ))}\n      <button className=\"create-habit\" onClick={() => createHabit('', defaultColors[habitList.length % defaultColors.length], 'ttttttt')}>New Habit</button>\n    </div>\n  )\n};\n\nexport default HabitList;\n","import React, { createContext, useContext } from 'react';\nimport { Switch, Route, Redirect, useParams, useRouteMatch } from \"react-router-dom\";\nimport CalendarDay from './calendarDay';\nimport CalendarMonth from './calendarMonth';\nimport CalendarYear from './calendarYear';\nimport HabitList from './habitList';\nimport { UsersContext } from '../usersContext';\nimport { HabitsProvider } from './habitsContext';\nimport { getYear, getMonth } from '../dateFormatter';\n\nexport const UserBaseUrlContext = createContext('');\nexport const UserNameContext = createContext('');\n\nconst User = () => {\n  const { path, url } = useRouteMatch();\n\n  const { userId } = useParams<{ userId: string }>();\n  const { userList } = useContext(UsersContext);\n  const user = userList.find(v => v[1] === userId);\n\n  if (!user) {\n    return (<Redirect to='/users'/>);\n  }\n  \n  return (\n    <UserBaseUrlContext.Provider value={url}>\n      <UserNameContext.Provider value={user[0]}>\n        <HabitsProvider>\n          <Switch>\n            <Route path={`${path}/calendar/:year/:month/:day`}>\n              <CalendarDay />\n            </Route>\n            <Route path={`${path}/calendar/:year/:month`}>\n              <CalendarMonth />\n            </Route>\n            <Route path={`${path}/calendar/:year`}>\n              <CalendarYear />\n            </Route>\n            <Route path={`${path}/habit-list`}>\n              <HabitList />\n            </Route>\n            <Redirect to={`${path}/calendar/${getYear(new Date())}/${getMonth(new Date())}`} />\n          </Switch>\n        </HabitsProvider>\n      </UserNameContext.Provider>\n    </UserBaseUrlContext.Provider>\n  )\n};\n\nexport default User;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Users from './users';\nimport User from './user';\nimport { UsersProvider } from './usersContext';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <UsersProvider>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/users'>\n              <Users />\n            </Route>\n            <Route path='/user/:userId'>\n              <User />\n            </Route>\n            <Redirect to='/users' />\n          </Switch>\n        </div>\n      </UsersProvider>\n    </BrowserRouter>\n  )\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}