{"version":3,"sources":["modes.tsx","dataStore.tsx","users/index.tsx","confetti/index.tsx","user/game/index.tsx","user/report/ItemDetails.tsx","user/report/report.tsx","user/report/index.tsx","user/settings/range.tsx","user/settings/index.tsx","user/modeLinks.tsx","user/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Mode","QuestionSet","formatters","none","n1","n2","Error","addition","subtraction","multiplication","division","checkers","a","getIcon","mode","faPlus","faMinus","faTimes","faDivide","defaultRange","defaultRanges","defaultSettings","s","m","d","logAnswer","userId","question","startTime","endTime","incorrectAnswers","data","getQuestionResponseData","localStorage","setItem","JSON","stringify","t","i","e","slice","parse","getItem","getReport","ranges","getUserRanges","allResponseTimes","j","q","forEach","o","push","sort","b","fastest","length","slowest","getScore","weightedElapsed","weightedIncorrect","totalWeights","w","getWeightedData","findIndex","n1n2QuestionScore","score","getUserSettings","id","console","error","setUserSettings","settings","DataStoreContext","createContext","getUserName","createNewUser","userList","DataStore","props","useState","setUserList","Provider","value","find","u","name","list","uuidv4","children","Users","username","setUsername","useContext","className","map","to","onSubmit","preventDefault","type","onChange","currentTarget","placeholder","required","confettiConfig","lifetime","angle","decay","spread","startVelocity","elementCount","elementSize","ConfettiContext","ConfettiLauncher","confettiRef","useRef","show","setShow","current","rewardMe","ref","config","style","display","onAnimationEnd","randomize","questions","result","max","Math","floor","random","v","digitRegex","Game","useParams","questionset","countString","count","index","setIndex","answer","setAnswer","correct","setCorrect","incorrect","setIncorrect","incorrectResponses","setIncorrectResponses","Date","now","setStartTime","launchConfetti","userBaseUrl","UserBaseUrlContext","history","useHistory","test","targeted","min1","max1","min2","max2","generatePairs","inputs","icon","faHome","size","autoFocus","onBlur","target","setTimeout","focus","replace","onKeyUp","key","Number","width","LineChart","clickCoords","reverse","chartData","labels","r","datasets","label","fill","backgroundColor","borderColor","useSpring","from","transform","top","window","innerHeight","left","innerWidth","div","onClick","options","scales","yAxes","ticks","beginAtZero","getColorFromScore","Report","useRouteMatch","path","url","setClickCoords","questionAndScore","lookup","reduce","c","sorted","firstAnsweredIndex","top10Start","top10","bottom10","filter","reportElements","currentSet","clientX","clientY","Home","RangeComponent","range","values","setValues","allowOverlap","step","min","renderTrack","onMouseDown","onTouchStart","renderThumb","isDragged","Settings","userName","an1","setan1","an2","setan2","sn1","setsn1","sn2","setsn2","mn1","setmn1","mn2","setmn2","dn1","setdn1","dn2","setdn2","useEffect","faLongArrowAltRight","faLongArrowAltDown","ModeLinks","faDice","faBullseye","faChartLine","User","Object","keys","faUserCog","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e5f8ae.chunk.js","sourcesContent":["import { faPlus, faMinus, faTimes, faDivide, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\nexport enum Mode {\n  none = 'none',\n  addition = 'addition',\n  subtraction = 'subtraction',\n  multiplication = 'multiplication',\n  division = 'division'\n}\n\nexport enum QuestionSet {\n  random = 'random',\n  targeted = 'targeted'\n}\n\nexport const formatters: { [key in Mode]: (n1: number, n2: number) => string } = {\n  [Mode.none]: (n1, n2) => { throw new Error('formatter called on mode None') },\n  [Mode.addition]: (n1, n2) => `${n1} + ${n2}`,\n  [Mode.subtraction]: (n1, n2) => `${n1 + n2} - ${n1}`,\n  [Mode.multiplication]: (n1, n2) => `${n1} x ${n2}`,\n  [Mode.division]: (n1, n2) => `${n1 * n2} ÷ ${n1}`\n};\n\nexport const checkers: { [key in Mode]: (n1: number, n2: number, a: number) => boolean } = {\n  [Mode.none]: (n1, n2) => { throw new Error('check answer called on mode None') },\n  [Mode.addition]: (n1, n2, a) => n1 + n2 === a,\n  [Mode.subtraction]: (n1, n2, a) => n2 === a,\n  [Mode.multiplication]: (n1, n2, a) => n1 * n2 === a,\n  [Mode.division]: (n1, n2, a) => n2 === a\n};\n\nexport const getIcon: (mode: Mode) => IconDefinition = mode => {\n  switch (mode) {\n    case Mode.addition:\n      return faPlus;\n    case Mode.subtraction:\n      return faMinus;\n    case Mode.multiplication:\n      return faTimes;\n    case Mode.division:\n      return faDivide;\n  }\n  return faPlus;\n}\n","import React, { FunctionComponent, createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Mode, formatters } from './modes';\n\nexport type IncorrectResponseData = {\n  a: number;\n  e: number;\n}\n\nexport type ResponseData = {\n  t: number;\n  i: IncorrectResponseData[];\n  e: number;\n}\n\nexport type Ranges = {\n  n1: [number, number];\n  n2: [number, number];\n}\n\nexport type UserSettings = {\n  a: Ranges;\n  s: Ranges;\n  m: Ranges;\n  d: Ranges;\n}\n\nconst defaultRange: [number, number] = [0, 12];\nconst defaultRanges: Ranges = { n1: [...defaultRange], n2: [...defaultRange] };\n\nexport const defaultSettings: UserSettings = {\n  a: { ...defaultRanges },\n  s: { ...defaultRanges },\n  m: { ...defaultRanges },\n  d: { n1: [1, 12], n2: [...defaultRange] }\n};\n\nconst logAnswer = (userId: string, question: string, startTime: number, endTime: number, incorrectAnswers: object[]) => {\n  const data = getQuestionResponseData(userId, question);\n  localStorage.setItem(`${userId} ${question}`, JSON.stringify([\n    { t: endTime, i: incorrectAnswers, e: endTime - startTime },\n    ...data.slice(0, 19)\n  ]));\n}\n\nconst getQuestionResponseData = (userId: string, question: string) =>\n  JSON.parse(localStorage.getItem(`${userId} ${question}`) || '[]');\n\nconst getReport = (userId: string, mode: Mode) => {\n  const data: { [key: string]: ResponseData[] } = {};\n\n  const ranges = getUserRanges(userId, Mode[mode]);\n\n  const allResponseTimes: number[] = [];\n  for (let i = ranges.n1[0]; i <= ranges.n1[1]; i++) {\n    for (let j = ranges.n2[0]; j <= ranges.n2[1]; j++) {\n      const q = formatters[mode](i, j);\n      data[q] = getQuestionResponseData(userId, q);\n      data[q].forEach(o => allResponseTimes.push(o.e));\n    }\n  }\n  allResponseTimes.sort((a, b) => a - b);\n  const fastest = allResponseTimes.length > 0 ? allResponseTimes[0] : 0;\n  const slowest = allResponseTimes.length > 0 ? allResponseTimes[allResponseTimes.length - 1] : 0;\n\n  const getWeightedData = (data: ResponseData[]) => {\n    if (data.length === 0) {\n      return [0, 0];\n    }\n    let weightedElapsed = 0, weightedIncorrect = 0, totalWeights = 0;\n    for (let i = data.length - 1, w = 1; i >= 0; totalWeights += w, w *= 2, i--) {\n      weightedElapsed += data[i].e * w;\n      weightedIncorrect += (data[i].i.length > 0 ? 1 : 0) * w;\n    }\n    return [weightedElapsed / totalWeights, weightedIncorrect / totalWeights];\n  }\n\n  const getScore = (data: ResponseData[]) => {\n    if (data.length === 0) {\n      return -1;\n    }\n    const [weightedElapsed, weightedIncorrect] = getWeightedData(data);\n    const relativeElapsed = ((weightedElapsed | fastest) - fastest) / ((slowest - fastest) | 1);\n    const overallElapsed = allResponseTimes.findIndex(e => e >= weightedElapsed) / allResponseTimes.length;\n    return (relativeElapsed + overallElapsed + weightedIncorrect) / 3;\n  }\n\n  const n1n2QuestionScore: [number, number, string, number][] = [];\n  for (let i = ranges.n1[0]; i <= ranges.n1[1]; i++) {\n    for (let j = ranges.n2[0]; j <= ranges.n2[1]; j++) {\n      const q = formatters[mode](i, j);\n      const score = getScore(data[q]);\n      n1n2QuestionScore.push([i, j, q, score]);\n    }\n  }\n  return n1n2QuestionScore;\n}\n\nconst getUserSettings: (id: string) => UserSettings = (id: string) =>\n  JSON.parse(localStorage.getItem(`${id}-settings`) || JSON.stringify(defaultSettings));\n\nconst getUserRanges: (id: string, mode: Mode) => Ranges = (id: string, mode: Mode) => {\n  switch (mode) {\n    case Mode.addition:\n      return getUserSettings(id).a;\n    case Mode.subtraction:\n      return getUserSettings(id).s;\n    case Mode.multiplication:\n      return getUserSettings(id).m;\n    case Mode.division:\n      return getUserSettings(id).d;\n  }\n  console.error('Mode not recognized in getUserRanges');\n  return { ...defaultRanges };\n}\n\nconst setUserSettings = (id: string, settings: UserSettings) => {\n  localStorage.setItem(`${id}-settings`, JSON.stringify(settings));\n}\n\nexport const DataStoreContext = createContext<{\n  logAnswer: (userId: string, question: string, startTime: number, endTime: number, incorrectAnswers: object[]) => void,\n  getQuestionResponseData: (userId: string, question: string) => ResponseData[],\n  getUserName: (id: string) => string,\n  createNewUser: (name: string) => void,\n  userList: [string, string][],\n  getReport: (userId: string, mode: Mode) => [number, number, string, number][],\n  getUserSettings: (id: string) => UserSettings,\n  getUserRanges: (id: string, mode: Mode) => Ranges,\n  setUserSettings: (id: string, settings: UserSettings) => void\n}>({\n  logAnswer: () => {},\n  getQuestionResponseData: () => [],\n  getUserName: () => '',\n  createNewUser: () => {},\n  userList: [],\n  getReport: () => [],\n  getUserSettings: () => defaultSettings,\n  getUserRanges: () => ({ ...defaultRanges }),\n  setUserSettings: () => {}\n});\n\nconst DataStore: FunctionComponent = (props) => {\n  \n  const [userList, setUserList] = useState<[string, string][]>(JSON.parse(localStorage.getItem('UserList') || '[]')); \n\n  const createNewUser = (name: string) => {\n    const list: [string, string][] = [...userList, [name, uuidv4()]];\n    setUserList(list);\n    localStorage.setItem('UserList', JSON.stringify(list));\n  }\n\n  const getUserName = (id: string) => (userList.find(u => u[1] === id) || [])[0] || 'error retrieving username';\n\n  return (\n    <DataStoreContext.Provider value={{\n      logAnswer,\n      getQuestionResponseData,\n      getUserName,\n      createNewUser,\n      userList,\n      getReport,\n      getUserSettings,\n      getUserRanges,\n      setUserSettings\n    }}>\n      { props.children }\n    </DataStoreContext.Provider>\n  );\n}\n\nexport default DataStore;\n","import React, { useState, FormEvent, ChangeEvent, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './index.css';\nimport { DataStoreContext } from '../dataStore';\n\nconst Users = () => {\n  const [username, setUsername] = useState<string>('');\n  const { createNewUser, userList } = useContext(DataStoreContext);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    createNewUser(username);\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsername(e.currentTarget.value);\n  }\n\n  return (\n    <div className=\"user-list\">\n      { userList.map(u => (<Link className=\"link-button link-button--app user-list__user\" key={u[1]} to={`user/${u[1]}/home`}>{u[0]}</Link>)) }\n      <form className=\"user-list__form\" onSubmit={handleSubmit}>\n        <input className=\"user-list__username\" type=\"text\" name=\"username\" onChange={handleInputChange} value={username} placeholder=\"New User\" required />\n        <button className=\"user-list__create\" type=\"submit\">Create</button>\n      </form>\n    </div>\n  )\n};\n\nexport default Users;\n","import React, { FunctionComponent, useRef, useState, createContext } from 'react';\nimport Reward from 'react-rewards';\nimport './index.css';\n\nconst confettiConfig = {\n  lifetime: 360,\n  angle: 90,\n  decay: 0.97,\n  spread: 360,\n  startVelocity: 23,\n  elementCount: 200,\n  elementSize: 14\n};\n\nexport const ConfettiContext = createContext(() => {});\n\nconst ConfettiLauncher: FunctionComponent = (props) => {\n  const confettiRef = useRef(null);\n  const [ show, setShow ] = useState(false);\n\n  const launchConfetti = () => {\n    (confettiRef.current as any).rewardMe();\n    setShow(true);\n  }\n\n  return (\n    <ConfettiContext.Provider value={launchConfetti}>\n      { props.children }\n      <div className=\"confetti-launcher\">\n        <Reward ref={confettiRef} type=\"confetti\" config={confettiConfig}><span></span></Reward>\n        <div className=\"confetti-launcher__message\"\n          style={{ display: show ? 'block' : 'none'}}\n          onAnimationEnd={e => {\n            setShow(false);\n          }}>Great work!</div>\n      </div>\n    </ConfettiContext.Provider>\n  )\n}\n\nexport default ConfettiLauncher;\n","import React, { useContext, useState } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport './index.css';\nimport { DataStoreContext } from '../../dataStore';\nimport { ConfettiContext } from '../../confetti';\nimport { Mode, QuestionSet, formatters, checkers } from '../../modes';\nimport { UserBaseUrlContext } from '..';\n\nconst getRandom = (max: number) => Math.floor(Math.random() * (max + 1));\n\nconst generatePairs = (min1: number, max1: number, min2: number, max2: number) => {\n  const result: [number, number][] = [];\n  for (let i = min1; i <= max1; i++) {\n    for (let j = min2; j <= max2; j++) {\n      result.push([i, j]);\n    }\n  }\n  return result;\n}\n\nconst randomize: (questions: [number, number][]) => [number, number][] = questions => {\n  const result = questions.map(q => [...q, getRandom(1000)]);\n  result.sort((a, b) => a[2] - b[2]);\n  return result.map(v => [v[0], v[1]]);\n}\n\nconst digitRegex = /^\\d+$/;\n\nconst Game = () => {\n  const { userId, mode, questionset, count: countString } = useParams<{ userId: string, mode: keyof typeof Mode, questionset: keyof typeof QuestionSet, count: string }>();\n\n  const [index, setIndex] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [correct, setCorrect] = useState(false);\n  const [incorrect, setIncorrect] = useState(false);\n  const [incorrectResponses, setIncorrectResponses] = useState<object[]>([]);\n  const [startTime, setStartTime] = useState(Date.now());\n  const { logAnswer, getReport, getUserRanges } = useContext(DataStoreContext);\n  const launchConfetti = useContext(ConfettiContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const history = useHistory();\n  const ranges = getUserRanges(userId, Mode[mode]);\n  const count = digitRegex.test(countString) ? +countString : (ranges.n1[1] - ranges.n1[0] + 1) * (ranges.n2[1] - ranges.n2[0] + 1);\n\n  const [inputs] = useState(\n    questionset === QuestionSet.targeted ?\n      randomize(getReport(userId, Mode[mode]).sort((a, b) => b[3] - a[3]).slice(0, count).map(v => [v[0], v[1]])) :\n      randomize(generatePairs(ranges.n1[0], ranges.n1[1], ranges.n2[0], ranges.n2[1])).slice(0, count)\n  );\n\n  const n1 = inputs[index][0];\n  const n2 = inputs[index][1];\n  const question = formatters[mode](n1, n2);\n\n  return (\n    <div className={`game background-light--${mode}`}>\n      <Link className={`link-button link-button--app game__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n      <div className=\"game__question\">\n        <span>{ question }<span className=\"game__question-equals\"> =</span></span>\n        <span className=\"game__answer-wrapper\">\n          { !correct ? <></> :\n            <span className=\"game__answer-correct\"\n              onAnimationEnd={e => {\n                setCorrect(false);\n                setIncorrect(false);\n              }}>\n            </span>\n          }\n          { !incorrect ? <></> :\n            <span className=\"game__answer-incorrect\"\n              onAnimationEnd={e => {\n                setCorrect(false);\n                setIncorrect(false);\n              }}>\n            </span>\n          }\n          <input\n            className=\"game__answer\"\n            type=\"number\"\n            size={2}\n            autoFocus={true}\n            onBlur={e => {\n              e.preventDefault();\n              const target = e.currentTarget;\n              setTimeout(() => { target.focus(); }, 0);\n            }}\n            onChange={e => setAnswer(e.target.value.replace(/\\D/g,''))}\n            onKeyUp={e => {\n              if (e.key === 'Enter') {\n                if (e.currentTarget.value.length > 0) {\n                  const answer = Number(e.currentTarget.value);\n                  if (checkers[mode](n1, n2, answer)) {\n                    logAnswer(userId, question, startTime, Date.now(), incorrectResponses);\n                    setCorrect(true);\n                    if (index + 1 >= inputs.length) {\n                      launchConfetti();\n                      history.replace(`${userBaseUrl}/report/${mode}`);\n                    }\n                    setIndex((index + 1) % inputs.length);\n                    setAnswer('');\n                    setIncorrectResponses([]);\n                    setStartTime(Date.now());\n                  }\n                  else {\n                    setIncorrect(true);\n                    setIncorrectResponses([{ a: answer, e: Date.now() - startTime }, ...incorrectResponses]);\n                  }\n                }\n              }\n            }}\n            value={answer}>\n          </input>\n        </span>\n      </div>\n      <div className=\"game__status\">\n        <div className=\"game__progress\" style={{ width: (100 * index / inputs.length) + \"%\"}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useContext } from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './ItemDetails.css';\nimport { ResponseData, DataStoreContext } from '../../dataStore';\nimport { UserBaseUrlContext } from '..';\n\ninterface Props {\n  clickCoords: number[];\n}\n\nconst LineChart = ({ clickCoords }: Props) => {\n  const { userId, question, mode } = useParams<{ userId: string, question: string, mode: string }>();\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { getQuestionResponseData } = useContext(DataStoreContext);\n  const history = useHistory();\n\n  const data: ResponseData[] = getQuestionResponseData(userId, question);\n  data.reverse();\n\n  const chartData = {\n    labels: data.map((r, i) => i + 1),\n    datasets: [\n      {\n        label: 'Time',\n        data: data.map(r => r.e / 1000),\n        fill: false,\n        backgroundColor: 'rgb(97, 223, 101)',\n        borderColor: 'rgba(97, 223, 101)',\n      },\n      {\n        label: 'Incorrect',\n        data: data.map(r => r.i.length),\n        fill: false,\n        backgroundColor: 'rgb(253, 95, 95)',\n        borderColor: 'rgba(253, 95, 95)',\n      }\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    }\n  }\n\n  const props = useSpring({\n    from: {\n      transform: 'translate(-50%, -50%) scale(0)',\n      top: ((clickCoords[1] * 100) / window.innerHeight) + 'vh',\n      left: ((clickCoords[0] * 100) / window.innerWidth) + 'vw'\n    },\n    to: {\n      transform: 'translate(-50%, -50%) scale(1)',\n      top: '50vh',\n      left: '50vw'\n    }\n  });\n\n  return (\n    <animated.div\n      style={props}\n      className={`item-details background-light--${mode}`} onClick={() => history.replace(`${userBaseUrl}/report/${mode}`)}>\n      <div className=\"item-details__header\">{question}</div>\n      <Line data={chartData} options={options} />\n      <div className=\"item-details__close\"><FontAwesomeIcon icon={faTimes}/></div>\n    </animated.div>\n  );\n}\n\nexport default LineChart\n","import React, { useState, useContext } from 'react';\nimport { Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { Mode, getIcon } from '../../modes';\nimport { DataStoreContext } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport './report.css';\nimport ItemDetails from './ItemDetails';\n\nconst getColorFromScore = (score: number) => score >= 0 ?\n  `rgb(${97 + (253 - 97) * score}, ${223 + (95 - 223) * score}, ${101 + (95 - 101) * score})`\n  : 'transparent';\n\nconst Report = () => {\n  const { userId, mode } = useParams<{ userId: string, mode: keyof typeof Mode }>();\n  const { path, url } = useRouteMatch();\n  const { getReport, getUserRanges } = useContext(DataStoreContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const [ clickCoords, setClickCoords ] = useState([0, 0]);\n\n  const questionAndScore = getReport(userId, Mode[mode]);\n  const ranges = getUserRanges(userId, Mode[mode]);\n  const lookup = questionAndScore.reduce<{ [key: number]: { [key: number]: [number, number, string, number] } }>((a, c) => {\n    if (!a[c[0]]) a[c[0]] = {};\n    a[c[0]][c[1]] = c;\n    return a;\n  }, {});\n  const sorted = [...questionAndScore];\n  sorted.sort((a, b) => a[3] - b[3]);\n  const firstAnsweredIndex = sorted.findIndex(q => q[3] >= 0);\n  const top10Start = Math.max(firstAnsweredIndex, 0);\n\n  const top10 = sorted.slice(top10Start, top10Start + 10).map(([n1, n2, q, score]) =>\n    <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>);\n  const bottom10 = sorted.slice(-10).filter(q => q[3] >= 0).map(([n1, n2, q, score]) =>\n    <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>);\n\n  const reportElements: JSX.Element[] = [];\n  for (let j = ranges.n2[0]; j <= ranges.n2[1]; j++) {\n    const currentSet: JSX.Element[] = [];\n    for (let i = ranges.n1[0]; i <= ranges.n1[1]; i++) {\n      const q = lookup[i][j][2];\n      const score = lookup[i][j][3];\n      currentSet.push(\n        <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>\n      );\n    }\n    reportElements.push(\n      <div className=\"report__set\">\n        { currentSet }\n      </div>\n    );\n  }\n  return (\n    <div className={`report background-light--${mode}`} onClick={e => setClickCoords([e.clientX, e.clientY])}>\n      <div className=\"report__header\">\n        <Link className={`link-button link-button--app report__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n        <FontAwesomeIcon icon={getIcon(Mode[mode])}/>\n      </div>\n      <div className={`report__leaderboards${firstAnsweredIndex < 0 ? ' report__leaderboards--empty' : ''}`}>\n        <section className=\"report__leaderboard\">\n          <div className=\"report__leaderboard-header\">Top {top10.length}</div>\n          <div className=\"report__leaderboard-body\">\n            { top10 }\n          </div>\n        </section>\n        <section className=\"report__leaderboard\">\n          <div className=\"report__leaderboard-header\">Bottom {bottom10.length}</div>\n          <div className=\"report__leaderboard-body\">\n            { bottom10 }\n          </div>\n        </section>\n      </div>\n      <section className=\"report__leaderboard\">\n        <div className=\"report__leaderboard-header\">All</div>\n        <div className=\"report__sets\">\n          { reportElements }\n        </div>\n      </section>\n      <Switch>\n        <Route path={`${path}/:question`}>\n          <ItemDetails clickCoords={clickCoords} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Report;\n","import React from 'react';\nimport Report from './report';\nimport { Route, Redirect, Switch, useRouteMatch } from 'react-router-dom';\n\nconst Home = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/:mode`}>\n        <Report />\n      </Route>\n      <Redirect to={`${path}/addition`} />\n    </Switch>\n  );\n}\n\nexport default Home;\n","import React, { FunctionComponent } from 'react';\nimport { Range } from 'react-range';\nimport './range.css';\n\nconst RangeComponent: FunctionComponent<{ range: [number, number], values: [number, number], setValues: (values: [number, number]) => void }> = ({ range, values, setValues }) => {\n  return (\n    <div className=\"user-settings-range\">\n        <Range\n          allowOverlap={false}\n          values={values}\n          step={1}\n          min={range[0]}\n          max={range[1]}\n          onChange={(values) => setValues([values[0], values[1]])}\n          renderTrack={({ props, children }) => (\n            <div\n              onMouseDown={props.onMouseDown}\n              onTouchStart={props.onTouchStart}\n              style={props.style}\n              className=\"user-settings-range__outer\"\n            >\n              <div\n                ref={props.ref}\n                className=\"user-settings-range__inner\"\n              >\n                {children}\n              </div>\n            </div>\n          )}\n          renderThumb={({ props, isDragged, index }) => (\n            <div\n              {...props}\n              className=\"user-settings-range__thumb\"\n            >\n              {values[index]}\n            </div>\n          )}\n        />\n      </div>\n  );\n}\n\nexport default RangeComponent;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faLongArrowAltDown, faLongArrowAltRight, faPlus, faMinus, faTimes, faDivide } from '@fortawesome/free-solid-svg-icons'\nimport { DataStoreContext, defaultSettings } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport Range from './range';\nimport { Mode, formatters } from '../../modes';\nimport './index.css';\n\nconst Settings = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { getUserName, getUserSettings, setUserSettings } = useContext(DataStoreContext);\n  const userName = getUserName(userId);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n\n  const settings = getUserSettings(userId);\n\n  const [an1, setan1] = useState(settings.a.n1);\n  const [an2, setan2] = useState(settings.a.n2);\n  const [sn1, setsn1] = useState(settings.s.n1);\n  const [sn2, setsn2] = useState(settings.s.n2);\n  const [mn1, setmn1] = useState(settings.m.n1);\n  const [mn2, setmn2] = useState(settings.m.n2);\n  const [dn1, setdn1] = useState(settings.d.n1);\n  const [dn2, setdn2] = useState(settings.d.n2);\n  \n  useEffect(() => {\n    setUserSettings(userId, {\n      a: { n1: an1, n2: an2 },\n      s: { n1: sn1, n2: sn2 },\n      m: { n1: mn1, n2: mn2 },\n      d: { n1: dn1, n2: dn2 },\n    })\n  }, [an1, an2, sn1, sn2, mn1, mn2, dn1, dn2, userId, setUserSettings])\n\n  return (\n    <div className=\"user-settings\">\n      <div className=\"user-settings__header\">\n        <Link className={`link-button link-button--app user-settings__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n        <span className=\"user-settings__header-title\">Settings for {userName}</span>\n      </div>\n      <div className=\"user-settings__section background-light--addition\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faPlus}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <Range range={defaultSettings.a.n1} values={an1} setValues={setan1} />\n          <Range range={defaultSettings.a.n2} values={an2} setValues={setan2} />\n          <div className=\"user-settings__question-range\">\n            <div>{ formatters[Mode.addition](an1[0], an2[0]) } = { an1[0] + an2[0] }</div>\n            <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n            <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n            <div>{ formatters[Mode.addition](an1[1], an2[1]) } = { an1[1] + an2[1] }</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--subtraction\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faMinus}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <Range range={defaultSettings.s.n1} values={sn1} setValues={setsn1} />\n          <Range range={defaultSettings.s.n2} values={sn2} setValues={setsn2} />\n          <div className=\"user-settings__question-range\">\n            <div>{ formatters[Mode.subtraction](sn1[0], sn2[0]) } = { sn2[0] }</div>\n            <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n            <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n            <div>{ formatters[Mode.subtraction](sn1[1], sn2[1]) } = { sn2[1] }</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--multiplication\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faTimes}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <Range range={defaultSettings.m.n1} values={mn1} setValues={setmn1} />\n          <Range range={defaultSettings.m.n2} values={mn2} setValues={setmn2} />\n          <div className=\"user-settings__question-range\">\n            <div>{ formatters[Mode.multiplication](mn1[0], mn2[0]) } = { mn1[0] * mn2[0] }</div>\n            <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n            <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n            <div>{ formatters[Mode.multiplication](mn1[1], mn2[1]) } = { mn1[1] * mn2[1] }</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--division\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faDivide}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <Range range={defaultSettings.d.n1} values={dn1} setValues={setdn1} />\n          <Range range={defaultSettings.d.n2} values={dn2} setValues={setdn2} />\n          <div className=\"user-settings__question-range\">\n            <div>{ formatters[Mode.division](dn1[0], dn2[0]) } = { dn2[0] }</div>\n            <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n            <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n            <div>{ formatters[Mode.division](dn1[1], dn2[1]) } = { dn2[1] }</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { FunctionComponent, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBullseye, faDice, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { UserBaseUrlContext } from './';\nimport { DataStoreContext } from '../dataStore';\nimport { Mode, formatters, getIcon } from '../modes';\nimport './modeLinks.css';\n\nconst THRESHOLD = 1;\n\nconst ModeLinks: FunctionComponent<{ mode: keyof typeof Mode }> = ({ mode }) => {\n\n  const { userId } = useParams<{ userId: string }>();\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { getQuestionResponseData, getUserRanges } = useContext(DataStoreContext);\n\n  const ranges = getUserRanges(userId, Mode[mode]);\n\n  let min = THRESHOLD;\n  for (let i = ranges.n1[0]; i <= ranges.n1[1]; i++) {\n    for (let j = ranges.n2[0]; j <= ranges.n2[1]; j++) {\n      min = Math.min(min, getQuestionResponseData(userId, formatters[mode](i, j)).length);\n    }\n  }\n\n  return (\n    <div className={`mode-links background-light--${mode}`}>\n      <div className=\"mode-links__header\">\n        <FontAwesomeIcon icon={getIcon(Mode[mode])}/>\n      </div>\n      <Link className={`link-button link-button--large link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/all`}><FontAwesomeIcon icon={faDice}/><span>All</span></Link>\n      <div className=\"mode-links__subsets\">\n        <div className=\"mode-links__subset\">\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/10`}><FontAwesomeIcon icon={faDice}/><span>10</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/25`}><FontAwesomeIcon icon={faDice}/><span>25</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/50`}><FontAwesomeIcon icon={faDice}/><span>50</span></Link>\n        </div>\n        <div className={`mode-links__subset${min < THRESHOLD ? ' mode-links__subset--hidden' : ''}`}>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/5`}><FontAwesomeIcon icon={faBullseye}/><span>5</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/10`}><FontAwesomeIcon icon={faBullseye}/><span>10</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/25`}><FontAwesomeIcon icon={faBullseye}/><span>25</span></Link>\n        </div>\n      </div>\n      <Link className={`link-button link-button--medium link-button--${mode}`} to={`${userBaseUrl}/report/${mode}`}><FontAwesomeIcon icon={faChartLine}/><span>Report</span></Link>\n    </div>\n  );\n}\n\nexport default ModeLinks;\n","import React, { useContext, createContext } from 'react';\nimport { Link, Switch, Route, useParams, Redirect, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCog } from '@fortawesome/free-solid-svg-icons'\nimport { DataStoreContext } from '../dataStore';\nimport Game from './game';\nimport Report from './report';\nimport Settings from './settings';\nimport ModeLinks from './modeLinks';\nimport { Mode } from '../modes';\nimport './index.css';\n\nexport const UserBaseUrlContext = createContext('');\n\nconst User = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { path, url } = useRouteMatch();\n  const { getUserName } = useContext(DataStoreContext);\n  const userName = getUserName(userId);\n\n  return (\n    <div className=\"user\">\n      <UserBaseUrlContext.Provider value={url}>\n        <Switch>\n          <Route path={`${path}/game/:mode/:questionset/:count`}>\n            <Game />\n          </Route>\n          <Route path={`${path}/report`}>\n            <Report />\n          </Route>\n          <Route path={`${path}/settings`}>\n            <Settings />\n          </Route>\n          <Route path={`${path}/home`}>\n            <div className=\"user__greeting\">Welcome {userName}!</div>\n            <div className=\"user__mode-list\">\n              { (Object.keys(Mode) as (keyof typeof Mode)[]).filter(m => m !== Mode.none).map(m => (<ModeLinks key={m} mode={m} />))}\n            </div>\n            <Link className=\"link-button link-button--medium link-button--app\" to={`${url}/settings`}><FontAwesomeIcon icon={faUserCog}/><span>Settings</span></Link>\n            { userName === \"Snappy_Snappy\" ? <div className=\"easter-egg\">CodingStuffs_Yea=Snappy_Snappy idk;what:im.doing</div> : null }\n          </Route>\n          <Redirect to={`${path}/home`} />\n        </Switch>\n      </UserBaseUrlContext.Provider>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport './App.css';\nimport Users from './users';\nimport User from './user';\nimport Confetti from './confetti';\nimport DataStore from './dataStore';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Confetti>\n        <DataStore>\n          <HashRouter>\n            <Switch>\n              <Route path={'/user/:userId'}>\n                <User />\n              </Route>\n              <Route path=\"/users\">\n                <Users />\n              </Route>\n              <Redirect to=\"/users\" />\n            </Switch>\n          </HashRouter>\n        </DataStore>\n      </Confetti>\n    </div>\n  )\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}