{"version":3,"sources":["modes.tsx","dataStore.tsx","users/index.tsx","user/agreement/index.tsx","user/instructions/index.tsx","confetti/index.tsx","user/game/text.tsx","user/game/multipleChoice.tsx","user/game/index.tsx","user/report/ItemDetails.tsx","user/report/report.tsx","user/report/index.tsx","user/settings/range.tsx","user/settings/index.tsx","user/modeLinks.tsx","user/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Mode","QuestionSet","formatters","none","n1","n2","Error","addition","subtraction","multiplication","division","checkers","a","getIcon","mode","faPlus","faMinus","faTimes","faDivide","defaultRange","defaultModeSettings","m","defaultSettings","s","d","logAnswer","userId","question","startTime","endTime","incorrectAnswers","data","getQuestionResponseData","localStorage","setItem","JSON","stringify","t","i","e","slice","parse","getItem","getReport","modeSettings","getUserModeSettings","allResponseTimes","j","q","forEach","o","push","sort","b","fastest","length","slowest","getScore","weightedElapsed","weightedIncorrect","totalWeights","w","getWeightedData","findIndex","n1n2QuestionScore","score","getUserSettings","id","console","error","setUserSettings","settings","DataStoreContext","createContext","getUserName","createNewUser","userList","DataStore","props","useState","setUserList","Provider","value","find","u","name","list","uuidv4","children","Users","username","setUsername","useContext","className","map","to","onSubmit","preventDefault","type","onChange","currentTarget","placeholder","required","Agreement","useParams","userBaseUrl","UserBaseUrlContext","onClick","pa","Date","now","Instructions","icon","faDice","faBullseye","faChartLine","faUserCog","confettiConfig","lifetime","angle","decay","spread","startVelocity","elementCount","elementSize","ConfettiContext","ConfettiLauncher","confettiRef","useRef","show","setShow","current","rewardMe","ref","config","style","display","onAnimationEnd","Text","checkAnswer","correct","setCorrect","incorrect","setIncorrect","answer","setAnswer","size","autoFocus","onBlur","target","setTimeout","focus","replace","onKeyUp","key","Number","generatePossibleIncorrects","min","max","range","specialWeights","possibleIncorrect","offset","Math","random","v","generateAnswers","answers","values","result","randomize","MultipleChoice","incorrectResponses","setAnswers","correctIndex","setCorrectIndex","useEffect","index","undefined","indexOf","answerSelected","questions","floor","digitRegex","Game","questionset","countString","count","setIndex","setStartTime","setIncorrectResponses","launchConfetti","history","useHistory","test","targeted","min1","max1","min2","max2","generatePairs","inputs","faHome","r","width","LineChart","clickCoords","reverse","chartData","labels","datasets","label","fill","backgroundColor","borderColor","useSpring","from","transform","top","window","innerHeight","left","innerWidth","div","options","scales","yAxes","ticks","beginAtZero","getColorFromScore","Report","useRouteMatch","path","url","setClickCoords","questionAndScore","lookup","reduce","c","sorted","firstAnsweredIndex","top10Start","top10","bottom10","filter","reportElements","currentSet","clientX","clientY","Home","RangeComponent","setValues","allowOverlap","step","renderTrack","onMouseDown","onTouchStart","renderThumb","isDragged","Settings","userName","am","setam","an1","setan1","an2","setan2","sm","setsm","sn1","setsn1","sn2","setsn2","mm","setmm","mn1","setmn1","mn2","setmn2","dm","setdm","dn1","setdn1","dn2","setdn2","paRef","faCheckSquare","faSquare","faLongArrowAltRight","faLongArrowAltDown","ModeLinks","User","agreementMatch","isExact","faUsers","faQuestion","Object","keys","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"mYAEYA,EAQAC,E,qHARAD,K,YAAAA,E,oBAAAA,E,0BAAAA,E,gCAAAA,E,qBAAAA,M,cAQAC,K,gBAAAA,E,qBAAAA,M,KAKL,IAAMC,GAAiE,mBAC3EF,EAAKG,MAAO,SAACC,EAAIC,GAAS,MAAM,IAAIC,MAAM,oCADiC,cAE3EN,EAAKO,UAAW,SAACH,EAAIC,GAAL,gBAAeD,EAAf,cAAuBC,MAFoC,cAG3EL,EAAKQ,aAAc,SAACJ,EAAIC,GAAL,gBAAeD,EAAKC,EAApB,cAA4BD,MAH4B,cAI3EJ,EAAKS,gBAAiB,SAACL,EAAIC,GAAL,gBAAeD,EAAf,cAAuBC,MAJ8B,cAK3EL,EAAKU,UAAW,SAACN,EAAIC,GAAL,gBAAeD,EAAKC,EAApB,iBAA4BD,MAL+B,GAQjEO,GAA2E,mBACrFX,EAAKG,MAAO,SAACC,EAAIC,GAAS,MAAM,IAAIC,MAAM,uCAD2C,cAErFN,EAAKO,UAAW,SAACH,EAAIC,EAAIO,GAAT,OAAeR,EAAKC,IAAOO,KAF0C,cAGrFZ,EAAKQ,aAAc,SAACJ,EAAIC,EAAIO,GAAT,OAAeP,IAAOO,KAH4C,cAIrFZ,EAAKS,gBAAiB,SAACL,EAAIC,EAAIO,GAAT,OAAeR,EAAKC,IAAOO,KAJoC,cAKrFZ,EAAKU,UAAW,SAACN,EAAIC,EAAIO,GAAT,OAAeP,IAAOO,KAL+C,GAQ3EC,EAA0C,SAAAC,GACrD,OAAQA,GACN,KAAKd,EAAKO,SACR,OAAOQ,IACT,KAAKf,EAAKQ,YACR,OAAOQ,IACT,KAAKhB,EAAKS,eACR,OAAOQ,IACT,KAAKjB,EAAKU,SACR,OAAOQ,IAEX,OAAOH,K,OCbHI,EAAiC,CAAC,EAAG,IACrCC,EAAoC,CAAEC,EAAG,EAAGjB,GAAG,GAAD,OAAMe,GAAed,GAAG,GAAD,OAAMc,IAEpEG,EAAgC,CAC3CV,EAAE,eAAMQ,GACRG,EAAE,eAAMH,GACRC,EAAE,eAAMD,GACRI,EAAG,CAAEH,EAAG,EAAGjB,GAAI,CAAC,EAAG,IAAKC,GAAG,GAAD,OAAMc,KAG5BM,EAAY,SAACC,EAAgBC,EAAkBC,EAAmBC,EAAiBC,GACvF,IAAMC,EAAOC,EAAwBN,EAAQC,GAC7CM,aAAaC,QAAb,UAAwBR,EAAxB,YAAkCC,GAAYQ,KAAKC,UAAL,CAC5C,CAAEC,EAAGR,EAASS,EAAGR,EAAkBS,EAAGV,EAAUD,IADJ,mBAEzCG,EAAKS,MAAM,EAAG,SAIfR,EAA0B,SAACN,EAAgBC,GAAjB,OAC9BQ,KAAKM,MAAMR,aAAaS,QAAb,UAAwBhB,EAAxB,YAAkCC,KAAe,OAExDgB,EAAY,SAACjB,EAAgBZ,GAMjC,IALA,IAAMiB,EAA0C,GAE1Ca,EAAeC,EAAoBnB,EAAQ1B,EAAKc,IAEhDgC,EAA6B,GAC1BR,EAAIM,EAAaxC,GAAG,GAAIkC,GAAKM,EAAaxC,GAAG,GAAIkC,IACxD,IAAK,IAAIS,EAAIH,EAAavC,GAAG,GAAI0C,GAAKH,EAAavC,GAAG,GAAI0C,IAAK,CAC7D,IAAMC,EAAI9C,EAAWY,GAAMwB,EAAGS,GAC9BhB,EAAKiB,GAAKhB,EAAwBN,EAAQsB,GAC1CjB,EAAKiB,GAAGC,SAAQ,SAAAC,GAAC,OAAIJ,EAAiBK,KAAKD,EAAEX,MAGjDO,EAAiBM,MAAK,SAACxC,EAAGyC,GAAJ,OAAUzC,EAAIyC,KA2BpC,IA1BA,IAAMC,EAAUR,EAAiBS,OAAS,EAAIT,EAAiB,GAAK,EAC9DU,EAAUV,EAAiBS,OAAS,EAAIT,EAAiBA,EAAiBS,OAAS,GAAK,EAcxFE,EAAW,SAAC1B,GAChB,GAAoB,IAAhBA,EAAKwB,OACP,OAAQ,EAF+B,MAZnB,SAACxB,GACvB,GAAoB,IAAhBA,EAAKwB,OACP,MAAO,CAAC,EAAG,GAGb,IADA,IAAIG,EAAkB,EAAGC,EAAoB,EAAGC,EAAe,EACtDtB,EAAIP,EAAKwB,OAAS,EAAGM,EAAI,EAAGvB,GAAK,EAAGsB,GAAgBC,EAAGA,GAAK,EAAGvB,IACtEoB,GAAmB3B,EAAKO,GAAGC,EAAIsB,EAC/BF,IAAsB5B,EAAKO,GAAGA,EAAEiB,OAAS,EAAI,EAAI,GAAKM,EAExD,MAAO,CAACH,EAAkBE,EAAcD,EAAoBC,GAOfE,CAAgB/B,GAJpB,mBAIlC2B,EAJkC,KAIjBC,EAJiB,KAOzC,SAF0BD,EAAkBJ,GAAWA,IAAaE,EAAUF,EAAW,GAClER,EAAiBiB,WAAU,SAAAxB,GAAC,OAAIA,GAAKmB,KAAmBZ,EAAiBS,OACrDI,GAAqB,GAG5DK,EAAwD,GACrD1B,EAAIM,EAAaxC,GAAG,GAAIkC,GAAKM,EAAaxC,GAAG,GAAIkC,IACxD,IAAK,IAAIS,EAAIH,EAAavC,GAAG,GAAI0C,GAAKH,EAAavC,GAAG,GAAI0C,IAAK,CAC7D,IAAMC,EAAI9C,EAAWY,GAAMwB,EAAGS,GACxBkB,EAAQR,EAAS1B,EAAKiB,IAC5BgB,EAAkBb,KAAK,CAACb,EAAGS,EAAGC,EAAGiB,IAGrC,OAAOD,GAGHE,EAAgD,SAACC,GAAD,OACpDhC,KAAKM,MAAMR,aAAaS,QAAb,UAAwByB,EAAxB,eAA0ChC,KAAKC,UAAUd,KAEhEuB,EAAgE,SAACsB,EAAYrD,GACjF,OAAQA,GACN,KAAKd,EAAKO,SACR,OAAO2D,EAAgBC,GAAIvD,EAC7B,KAAKZ,EAAKQ,YACR,OAAO0D,EAAgBC,GAAI5C,EAC7B,KAAKvB,EAAKS,eACR,OAAOyD,EAAgBC,GAAI9C,EAC7B,KAAKrB,EAAKU,SACR,OAAOwD,EAAgBC,GAAI3C,EAG/B,OADA4C,QAAQC,MAAM,8CACP,eAAKjD,IAGRkD,EAAkB,SAACH,EAAYI,GACnCtC,aAAaC,QAAb,UAAwBiC,EAAxB,aAAuChC,KAAKC,UAAUmC,KAG3CC,EAAmBC,wBAU7B,CACDhD,UAAW,aACXO,wBAAyB,iBAAM,IAC/B0C,YAAa,iBAAM,IACnBC,cAAe,aACfC,SAAU,GACVjC,UAAW,iBAAM,IACjBuB,gBAAiB,kBAAM5C,GACvBuB,oBAAqB,iCAAYzB,IACjCkD,gBAAiB,eAgCJO,EA7BsB,SAACC,GAAW,IAAD,EAEdC,mBAA6B5C,KAAKM,MAAMR,aAAaS,QAAQ,aAAe,OAF9D,mBAEvCkC,EAFuC,KAE7BI,EAF6B,KAY9C,OACE,cAACR,EAAiBS,SAAlB,CAA2BC,MAAO,CAChCzD,YACAO,0BACA0C,YANgB,SAACP,GAAD,OAAiBS,EAASO,MAAK,SAAAC,GAAC,OAAIA,EAAE,KAAOjB,MAAO,IAAI,IAAM,6BAO9EQ,cAbkB,SAACU,GACrB,IAAMC,EAAwB,sBAAOV,GAAP,CAAiB,CAACS,EAAME,iBACtDP,EAAYM,GACZrD,aAAaC,QAAQ,WAAYC,KAAKC,UAAUkD,KAW9CV,WACAjC,YACAuB,kBACArB,sBACAyB,mBATF,SAWIQ,EAAMU,YC3ICC,EAxBD,WAAO,IAAD,EACcV,mBAAiB,IAD/B,mBACXW,EADW,KACDC,EADC,OAEkBC,qBAAWpB,GAAvCG,EAFU,EAEVA,cAAeC,EAFL,EAEKA,SAWvB,OACE,sBAAKiB,UAAU,YAAf,UACIjB,EAASkB,KAAI,SAAAV,GAAC,OAAK,cAAC,IAAD,CAAMS,UAAU,+CAA0DE,GAAE,eAAUX,EAAE,GAAZ,SAA5E,SAAoGA,EAAE,IAAlCA,EAAE,OAC3F,uBAAMS,UAAU,kBAAkBG,SAZjB,SAACzD,GACpBA,EAAE0D,iBACFtB,EAAce,IAUZ,UACE,uBAAOG,UAAU,sBAAsBK,KAAK,OAAOb,KAAK,WAAWc,SAR/C,SAAC5D,GACzBoD,EAAYpD,EAAE6D,cAAclB,QAOwEA,MAAOQ,EAAUW,YAAY,WAAWC,UAAQ,IAChJ,wBAAQT,UAAU,oBAAoBK,KAAK,SAA3C,2B,eCQOK,G,OAzBG,WAAO,IACf7E,EAAW8E,cAAX9E,OACF+E,EAAcb,qBAAWc,IAFT,EAGuBd,qBAAWpB,GAAhDN,EAHc,EAGdA,gBAAiBI,EAHH,EAGGA,gBAQzB,OACE,sBAAKuB,UAAU,YAAf,UACE,qBAAKA,UAAU,oBAAf,+BACA,wDACA,yGACA,kFACA,uHACA,uKACA,8BAAK,cAAC,IAAD,CAAMA,UAAU,kDAAkDE,GAAE,UAAKU,EAAL,iBAAiCE,QAd/F,WACb,IAAMpC,EAAWL,EAAgBxC,GACjC6C,EAASqC,GAAKC,KAAKC,MACnBxC,EAAgB5C,EAAQ6C,IAWjB,SAAsH,8CAC3H,8BAAK,cAAC,IAAD,CAAMsB,UAAU,kDAAkDE,GAAG,SAArE,SAA8E,mDCkG1EgB,G,OArHM,WACnB,IAAMN,EAAcb,qBAAWc,IAE/B,OACE,sBAAKb,UAAU,eAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAMA,UAAU,sBAAhB,4BAEF,0BAASA,UAAU,kDAAnB,UACE,qEACA,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMjG,MAAS,+CAC/F,sBAAK8E,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAMhG,MAAU,kDACnG,sBAAK6E,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAM/F,MAAU,qDACtG,sBAAK4E,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAM9F,MAAW,qDAGrG,yBAAS2E,UAAU,kDAAnB,SACE,sBAAKA,UAAU,+BAAf,UAA8C,cAAC,IAAD,CAAiBmB,KAAMC,MAArE,eAEF,0BAASpB,UAAU,wBAAnB,UACE,qFACA,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,0CAC/F,sBAAKpB,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,0CAClG,sBAAKpB,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,0CACrG,sBAAKpB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,gDAGnG,0BAASpB,UAAU,wBAAnB,UACE,yFACA,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAC/F,sBAAKpB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAC/F,sBAAKpB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,4CAEjG,sBAAKpB,UAAU,iCAAf,UACE,sBAAKA,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAClG,sBAAKpB,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAClG,sBAAKpB,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,4CAEpG,sBAAKpB,UAAU,iCAAf,UACE,sBAAKA,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCACrG,sBAAKpB,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCACrG,sBAAKpB,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,4CAEvG,sBAAKpB,UAAU,iCAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAC/F,sBAAKpB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,yCAC/F,sBAAKpB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAMC,MAAS,kDAIrG,yBAASpB,UAAU,kDAAnB,SACE,sBAAKA,UAAU,+BAAf,UAA8C,cAAC,IAAD,CAAiBmB,KAAME,MAArE,iBAEF,0BAASrB,UAAU,wBAAnB,UACE,mIACA,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,wCACnG,sBAAKrB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,yCACnG,sBAAKrB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,4CAErG,sBAAKrB,UAAU,iCAAf,UACE,sBAAKA,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,wCACtG,sBAAKrB,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,yCACtG,sBAAKrB,UAAU,mDAAf,UAAkE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,4CAExG,sBAAKrB,UAAU,iCAAf,UACE,sBAAKA,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,wCACzG,sBAAKrB,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,yCACzG,sBAAKrB,UAAU,sDAAf,UAAqE,cAAC,IAAD,CAAiBmB,KAAME,MAAa,4CAE3G,sBAAKrB,UAAU,iCAAf,UACE,sBAAKA,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,wCACnG,sBAAKrB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,yCACnG,sBAAKrB,UAAU,gDAAf,UAA+D,cAAC,IAAD,CAAiBmB,KAAME,MAAa,+CAGvG,mGAEF,yBAASrB,UAAU,kDAAnB,SACE,sBAAKA,UAAU,+BAAf,UAA8C,cAAC,IAAD,CAAiBmB,KAAMG,MAArE,eAEF,0BAAStB,UAAU,wBAAnB,UACE,gCAAK,sBAAMA,UAAU,2CAAhB,mBAAL,kDACA,gCAAK,sBAAMA,UAAU,yCAAhB,iBAAL,0DAEF,yBAASA,UAAU,wBAAnB,SACE,gEAAkC,sBAAMA,UAAU,uBAAhB,SAAuC,cAAC,IAAD,CAAiBmB,KAAMG,QAAhG,kDAEF,0BAAStB,UAAU,wBAAnB,UACE,8BAAK,sBAAMA,UAAU,uBAAhB,sBACL,4EAEF,0BAASA,UAAU,wBAAnB,UACE,8BAAK,sBAAMA,UAAU,uBAAhB,yBACL,iFAEF,yBAASA,UAAU,kDAAnB,SACE,sBAAKA,UAAU,+BAAf,UAA8C,cAAC,IAAD,CAAiBmB,KAAMI,MAArE,iBAEF,yBAASvB,UAAU,wBAAnB,SACE,oFAEF,yBAASA,UAAU,wBAAnB,SACE,8EAEF,yBAASA,UAAU,wBAAnB,SACE,cAAC,IAAD,CAAMA,UAAU,mDAAmDE,GAAE,UAAKU,EAAL,SAArE,SAA8F,oD,iBClHhGY,G,OAAiB,CACrBC,SAAU,IACVC,MAAO,GACPC,MAAO,IACPC,OAAQ,IACRC,cAAe,GACfC,aAAc,IACdC,YAAa,KAGFC,EAAkBpD,yBAAc,eA0B9BqD,EAxB6B,SAAChD,GAC3C,IAAMiD,EAAcC,iBAAO,MAD0B,EAE3BjD,oBAAS,GAFkB,mBAE7CkD,EAF6C,KAEvCC,EAFuC,KASrD,OACE,eAACL,EAAgB5C,SAAjB,CAA0BC,MANL,WACpB6C,EAAYI,QAAgBC,WAC7BF,GAAQ,IAIR,UACIpD,EAAMU,SACR,sBAAKK,UAAU,oBAAf,UACE,cAAC,IAAD,CAAQwC,IAAKN,EAAa7B,KAAK,WAAWoC,OAAQjB,EAAlD,SAAkE,2BAClE,qBAAKxB,UAAU,6BACb0C,MAAO,CAAEC,QAASP,EAAO,QAAU,QACnCQ,eAAgB,SAAAlG,GACd2F,GAAQ,IAHZ,gCC2BOQ,G,OAtD0D,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAE9D5D,oBAAS,GAFqD,mBAErF6D,EAFqF,KAE5EC,EAF4E,OAG1D9D,oBAAS,GAHiD,mBAGrF+D,EAHqF,KAG1EC,EAH0E,OAIhEhE,mBAAS,IAJuD,mBAIrFiE,EAJqF,KAI7EC,EAJ6E,KAM5F,OACE,uBAAMpD,UAAU,gBAAhB,UACK+C,EACD,sBAAM/C,UAAU,uBACd4C,eAAgB,SAAAlG,GACdsG,GAAW,GACXE,GAAa,MAJN,6BAQVD,EACD,sBAAMjD,UAAU,yBACd4C,eAAgB,SAAAlG,GACdsG,GAAW,GACXE,GAAa,MAJJ,6BAQf,uBACElD,UAAU,eACVK,KAAK,SACLgD,KAAM,EACNC,WAAW,EACXC,OAAQ,SAAA7G,GACNA,EAAE0D,iBACF,IAAMoD,EAAS9G,EAAE6D,cACjBkD,YAAW,WAAQD,EAAOE,UAAY,IAExCpD,SAAU,SAAA5D,GAAC,OAAI0G,EAAU1G,EAAE8G,OAAOnE,MAAMsE,QAAQ,MAAM,MACtDC,QAAS,SAAAlH,GACO,UAAVA,EAAEmH,KACAnH,EAAE6D,cAAclB,MAAM3B,OAAS,IAC7BoF,EAAYgB,OAAOpH,EAAE6D,cAAclB,SACrC2D,GAAW,GACXI,EAAU,KAGVF,GAAa,KAKrB7D,MAAO8D,SCzCTY,G,OAA6B,SAACZ,EAAgBa,EAAaC,EAAaC,EAAeC,GAG3F,IAFA,IAAMC,EAAwC,GAC1CC,EAAS,EACND,EAAkB1G,OAASwG,GAC5Bf,EAASkB,GAAUL,GAAKI,EAAkB9G,KAAK,CAAC6F,EAASkB,EAAQC,KAAKC,UAAYJ,EAAehB,EAASkB,IAAW,KACrHlB,EAASkB,GAAUJ,GAAKG,EAAkB9G,KAAK,CAAC6F,EAASkB,EAAQC,KAAKC,UAAYJ,EAAehB,EAASkB,IAAW,KACzHA,IAGF,OADAD,EAAkB7G,MAAK,SAACxC,EAAGyC,GAAJ,OAAUA,EAAE,GAAKzC,EAAE,MACnCqJ,EAAkBzH,MAAM,EAAG,GAAGsD,KAAI,SAAAuE,GAAC,OAAIA,EAAE,QAG5CC,EAAkB,SAAClK,EAAYC,EAAYS,GAA6B,IAAD,QACrEyJ,EAAoB,GAC1B,OAAQzJ,GACN,KAAKd,EAAKO,SACRgK,EAAQpH,KAAR,MAAAoH,EAAO,CAAMnK,EAAKC,GAAX,mBAAkBuJ,EAA2BxJ,EAAKC,EAAI,EAAG,GAAI,GAAjB,mBAChDD,EAAKC,EAAK,EAAI,GADkC,cAEhDD,EAAKC,EAAK,EAAI,GAFkC,cAGhDD,EAAKC,EAAK,EAAI,GAHkC,cAIhDD,EAAKC,EAAK,EAAI,GAJkC,OAMnD,MACF,KAAKL,EAAKQ,YACR+J,EAAQpH,KAAR,MAAAoH,EAAO,CAAMlK,GAAN,mBAAauJ,EAA2BvJ,EAAI,EAAG,GAAI,GAAZ,mBAC3CA,EAAK,EAAI,GADkC,cAE3CA,EAAK,EAAI,GAFkC,cAG3CA,EAAK,EAAI,GAHkC,cAI3CA,EAAK,EAAI,GAJkC,OAM9C,MACF,KAAKL,EAAKS,eACR8J,EAAQpH,KAAR,MAAAoH,EAAO,CAAMnK,EAAKC,GAAX,mBAAkBuJ,EAA2BxJ,EAAKC,EAAI,EAAG,IAAK,IAAlB,mBAChDD,EAAKC,EAAK,EAAI,GADkC,cAEhDD,EAAKC,EAAK,EAAI,GAFkC,cAGhDD,EAAKC,EAAK,EAAI,GAHkC,cAIhDD,EAAKC,EAAK,EAAI,GAJkC,eAK/CD,EAAK,GAAKC,EAAK,GALgC,eAM/CD,EAAK,GAAKC,EAAK,GANgC,cAOhDD,GAAMC,EAAK,GAAK,GAPgC,cAQhDD,GAAMC,EAAK,GAAK,GARgC,eAS/CD,EAAK,GAAKC,EAAK,GATgC,eAU/CD,EAAK,GAAKC,EAAK,GAVgC,cAWhDD,GAAMC,EAAK,GAAK,GAXgC,cAYhDD,GAAMC,EAAK,GAAK,GAZgC,OAcnD,MACF,KAAKL,EAAKU,SACR6J,EAAQpH,KAAR,MAAAoH,EAAO,CAAMlK,GAAN,mBAAauJ,EAA2BvJ,EAAI,EAAG,GAAI,GAAZ,mBAC3CA,EAAK,EAAI,GADkC,cAE3CA,EAAK,EAAI,GAFkC,cAG3CA,EAAK,EAAI,GAHkC,cAI3CA,EAAK,EAAI,GAJkC,OAQlD,OA9DgD,SAAAmK,GAChD,IAAMC,EAASD,EAAO1E,KAAI,SAAAuE,GAAC,MAAI,CAACA,EAAGF,KAAKC,aAExC,OADAK,EAAOrH,MAAK,SAACxC,EAAGyC,GAAJ,OAAUzC,EAAE,GAAKyC,EAAE,MACxBoH,EAAO3E,KAAI,SAAAuE,GAAC,OAAIA,EAAE,MA2DlBK,CAAUH,IA8CJI,EArCV,SAAC,GAAuD,IAArDhC,EAAoD,EAApDA,YAAavI,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,GAAIS,EAA+B,EAA/BA,KAAM8J,EAAyB,EAAzBA,mBAAyB,EAE5B7F,mBAAS,CAAC,EAAG,EAAG,EAAG,IAFS,mBAEnDwF,EAFmD,KAE1CM,EAF0C,OAGlB9F,qBAHkB,mBAGnD+F,EAHmD,KAGrCC,EAHqC,KAK1DC,qBAAU,WAAWH,EAAWP,EAAgBlK,EAAIC,EAAIS,MAAQ,CAACV,EAAIC,EAAIS,IASzE,OACE,qBAAK+E,UAAU,wBAAf,SAEE0E,EAAQzE,KAAI,SAAClF,EAAGqK,GAAJ,OACV,sBAAiBpF,UAAU,kCAA3B,UACIiF,IAAiBG,EACf,sBAAMpF,UAAU,kCACd4C,eAAgB,SAAAlG,GACdwI,OAAgBG,MAGpB,6BAEJ,wBAAQrF,UAAS,8CAAyC/E,GAAzC,QAAoF,IAAnC8J,EAAmBO,QAAQvK,GAAY,GAAK,uCAA0C+F,QAAS,kBApBlJ,SAACqC,EAAgBiC,GACtBtC,EAAYK,IAE1B+B,EAAgBE,GAiB2JG,CAAexK,EAAGqK,IAAzL,SACE,sBAAMpF,UAAU,+BAAhB,SAAgDjF,QAV1CqK,SCrEZP,EAAmE,SAAAW,GACvE,IAAMZ,EAASY,EAAUvF,KAAI,SAAA9C,GAAC,4BAAQA,GAAR,EAbb8G,EAakC,IAblBK,KAAKmB,MAAMnB,KAAKC,UAAYN,EAAM,OAAnD,IAACA,KAejB,OADAW,EAAOrH,MAAK,SAACxC,EAAGyC,GAAJ,OAAUzC,EAAE,GAAKyC,EAAE,MACxBoH,EAAO3E,KAAI,SAAAuE,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,QAG5BkB,EAAa,QA4DJC,EA1DF,WAAO,IAAD,EACyChF,cAAlD9E,EADS,EACTA,OAAQZ,EADC,EACDA,KAAM2K,EADL,EACKA,YAAoBC,EADzB,EACkBC,MADlB,EAGS5G,mBAAS,GAHlB,mBAGVkG,EAHU,KAGHW,EAHG,OAIiB7G,mBAAS8B,KAAKC,OAJ/B,mBAIVlF,EAJU,KAICiK,EAJD,OAKmC9G,mBAAkC,IALrE,mBAKV6F,EALU,KAKUkB,EALV,OAMqClG,qBAAWpB,GAAzD/C,EANS,EAMTA,UAAWkB,EANF,EAMEA,UAAWE,EANb,EAMaA,oBACxBkJ,EAAiBnG,qBAAWiC,GAC5BpB,EAAcb,qBAAWc,IACzBsF,EAAUC,cACVrJ,EAAeC,EAAoBnB,EAAQ1B,EAAKc,IAChD6K,EAAQJ,EAAWW,KAAKR,IAAgBA,GAAe9I,EAAaxC,GAAG,GAAKwC,EAAaxC,GAAG,GAAK,IAAMwC,EAAavC,GAAG,GAAKuC,EAAavC,GAAG,GAAK,GAXtI,EAaA0E,mBACf0G,IAAgBxL,EAAYkM,SAC1BzB,EAAU/H,EAAUjB,EAAQ1B,EAAKc,IAAOsC,MAAK,SAACxC,EAAGyC,GAAJ,OAAUA,EAAE,GAAKzC,EAAE,MAAI4B,MAAM,EAAGmJ,GAAO7F,KAAI,SAAAuE,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAE,QACtGK,EAlCgB,SAAC0B,EAAcC,EAAcC,EAAcC,GAE/D,IADA,IAAM9B,EAA6B,GAC1BnI,EAAI8J,EAAM9J,GAAK+J,EAAM/J,IAC5B,IAAK,IAAIS,EAAIuJ,EAAMvJ,GAAKwJ,EAAMxJ,IAC5B0H,EAAOtH,KAAK,CAACb,EAAGS,IAGpB,OAAO0H,EA2BO+B,CAAc5J,EAAaxC,GAAG,GAAIwC,EAAaxC,GAAG,GAAIwC,EAAavC,GAAG,GAAIuC,EAAavC,GAAG,KAAKmC,MAAM,EAAGmJ,IAH/Gc,EAbU,oBAmBXrM,EAAKqM,EAAOxB,GAAO,GACnB5K,EAAKoM,EAAOxB,GAAO,GACnBtJ,EAAWzB,EAAWY,GAAMV,EAAIC,GAEhCsI,EAAc,SAACK,GACnB,OAAIrI,EAASG,GAAMV,EAAIC,EAAI2I,IACzBvH,EAAUC,EAAQC,EAAUC,EAAWiF,KAAKC,MAAO8D,GAC/CK,EAAQ,GAAKwB,EAAOlJ,SACtBwI,IACAC,EAAQxC,QAAR,UAAmB/C,EAAnB,mBAAyC3F,KAE3C8K,GAAUX,EAAQ,GAAKwB,EAAOlJ,QAC9BuI,EAAsB,IACtBD,EAAahF,KAAKC,QACX,IAEPgF,EAAsB,CAAC,CAAElL,EAAGoI,EAAQzG,EAAGsE,KAAKC,MAAQlF,IAA/B,mBAA+CgJ,MAC7D,IAIX,OACE,sBAAK/E,UAAS,iCAA4B/E,GAA1C,UACE,cAAC,IAAD,CAAM+E,UAAS,0CAA6CE,GAAE,UAAKU,EAAL,SAA9D,SAAuF,cAAC,IAAD,CAAiBO,KAAM0F,QAC9G,sBAAK7G,UAAU,iBAAf,UACE,iCAAQlE,EAAU,sBAAMkE,UAAU,wBAAhB,mBACG,IAAnBjD,EAAavB,EACb,cAAC,EAAD,CAAMsH,YAAaA,IAEnB,cAAC,EAAD,CAAgBA,YAAaA,EAAavI,GAAIA,EAAIC,GAAIA,EAAIS,KAAMA,EAAM8J,mBAAoBA,EAAmB9E,KAAI,SAAA6G,GAAC,OAAIA,EAAE/L,UAG5H,qBAAKiF,UAAU,eAAf,SACE,qBAAKA,UAAU,iBAAiB0C,MAAO,CAAEqE,MAAQ,IAAM3B,EAAQwB,EAAOlJ,OAAU,a,yBCLzEsJ,G,OAjEG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAyB,EACTtG,cAA3B9E,EADoC,EACpCA,OAAQC,EAD4B,EAC5BA,SAAUb,EADkB,EAClBA,KACpB2F,EAAcb,qBAAWc,IACvB1E,EAA4B4D,qBAAWpB,GAAvCxC,wBACFgK,EAAUC,cAEVlK,EAAuBC,EAAwBN,EAAQC,GAC7DI,EAAKgL,UAEL,IAAMC,EAAY,CAChBC,OAAQlL,EAAK+D,KAAI,SAAC6G,EAAGrK,GAAJ,OAAUA,EAAI,KAC/B4K,SAAU,CACR,CACEC,MAAO,OACPpL,KAAMA,EAAK+D,KAAI,SAAA6G,GAAC,OAAIA,EAAEpK,EAAI,OAC1B6K,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,sBAEf,CACEH,MAAO,YACPpL,KAAMA,EAAK+D,KAAI,SAAA6G,GAAC,OAAIA,EAAErK,EAAEiB,UACxB6J,MAAM,EACNC,gBAAiB,mBACjBC,YAAa,uBAiBbxI,EAAQyI,oBAAU,CACtBC,KAAM,CACJC,UAAW,iCACXC,IAAwB,IAAjBZ,EAAY,GAAYa,OAAOC,YAAe,KACrDC,KAAyB,IAAjBf,EAAY,GAAYa,OAAOG,WAAc,MAEvD/H,GAAI,CACF0H,UAAW,iCACXC,IAAK,OACLG,KAAM,UAIV,OACE,eAAC,WAASE,IAAV,CACExF,MAAOzD,EACPe,UAAS,yCAAoC/E,GAAQ6F,QAAS,kBAAMqF,EAAQxC,QAAR,UAAmB/C,EAAnB,mBAAyC3F,KAF/G,UAGE,qBAAK+E,UAAU,uBAAf,SAAuClE,IACvC,cAAC,OAAD,CAAMI,KAAMiL,EAAWgB,QA9BX,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,SA0BnB,qBAAKvI,UAAU,sBAAf,SAAqC,cAAC,IAAD,CAAiBmB,KAAM/F,aChE5DoN,EAAoB,SAACpK,GAAD,OAAmBA,GAAS,EAAT,cACpC,GAAK,IAAaA,EADkB,aACR,KAAM,IAAaA,EADX,aACqB,KAAM,EAAaA,EADxC,KAEzC,eA6EWqK,EA3EA,WAAO,IAAD,EACM9H,cAAjB9E,EADW,EACXA,OAAQZ,EADG,EACHA,KADG,EAEGyN,cAAdC,EAFW,EAEXA,KAAMC,EAFK,EAELA,IAFK,EAGwB7I,qBAAWpB,GAA9C7B,EAHW,EAGXA,UAAWE,EAHA,EAGAA,oBACb4D,EAAcb,qBAAWc,IAJZ,EAKqB3B,mBAAS,CAAC,EAAG,IALlC,mBAKX+H,EALW,KAKE4B,EALF,KAObC,EAAmBhM,EAAUjB,EAAQ1B,EAAKc,IAC1C8B,EAAeC,EAAoBnB,EAAQ1B,EAAKc,IAChD8N,EAASD,EAAiBE,QAA+E,SAACjO,EAAGkO,GAGjH,OAFKlO,EAAEkO,EAAE,MAAKlO,EAAEkO,EAAE,IAAM,IACxBlO,EAAEkO,EAAE,IAAIA,EAAE,IAAMA,EACTlO,IACN,IACGmO,EAAM,YAAOJ,GACnBI,EAAO3L,MAAK,SAACxC,EAAGyC,GAAJ,OAAUzC,EAAE,GAAKyC,EAAE,MAU/B,IATA,IAAM2L,EAAqBD,EAAOhL,WAAU,SAAAf,GAAC,OAAIA,EAAE,IAAM,KACnDiM,EAAa9E,KAAKL,IAAIkF,EAAoB,GAE1CE,EAAQH,EAAOvM,MAAMyM,EAAYA,EAAa,IAAInJ,KAAI,mCAAU9C,GAAV,gBAAaiB,EAAb,YAC1D,cAAC,IAAD,CAAM4B,UAAU,sDAAsDE,GAAE,UAAK0I,EAAL,YAAYzL,GAAauF,MAAO,CAAE8E,gBAAiBgB,EAAkBpK,IAAUuF,SAAO,EAA9J,SAA+J,+BAAOxG,KAAxEA,MAC1FmM,EAAWJ,EAAOvM,OAAO,IAAI4M,QAAO,SAAApM,GAAC,OAAIA,EAAE,IAAM,KAAG8C,KAAI,mCAAU9C,GAAV,gBAAaiB,EAAb,YAC5D,cAAC,IAAD,CAAM4B,UAAU,sDAAsDE,GAAE,UAAK0I,EAAL,YAAYzL,GAAauF,MAAO,CAAE8E,gBAAiBgB,EAAkBpK,IAAUuF,SAAO,EAA9J,SAA+J,+BAAOxG,KAAxEA,MAE1FqM,EAAgC,GAC7BtM,EAAIH,EAAavC,GAAG,GAAI0C,GAAKH,EAAavC,GAAG,GAAI0C,IAAK,CAE7D,IADA,IAAMuM,EAA4B,GACzBhN,EAAIM,EAAaxC,GAAG,GAAIkC,GAAKM,EAAaxC,GAAG,GAAIkC,IAAK,CAC7D,IAAMU,EAAI4L,EAAOtM,GAAGS,GAAG,GACjBkB,EAAQ2K,EAAOtM,GAAGS,GAAG,GAC3BuM,EAAWnM,KACT,cAAC,IAAD,CAAM0C,UAAU,sDAAsDE,GAAE,UAAK0I,EAAL,YAAYzL,GAAauF,MAAO,CAAE8E,gBAAiBgB,EAAkBpK,IAAUuF,SAAO,EAA9J,SAA+J,+BAAOxG,KAAxEA,IAGlGqM,EAAelM,KACb,qBAAK0C,UAAU,cAAf,SACIyJ,GAD8BvM,IAKtC,OACE,sBAAK8C,UAAS,mCAA8B/E,GAAQ6F,QAAS,SAAApE,GAAC,OAAImM,EAAe,CAACnM,EAAEgN,QAAShN,EAAEiN,WAA/F,UACE,sBAAK3J,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMA,UAAS,4CAA+CE,GAAE,UAAKU,EAAL,SAAhE,SAAyF,cAAC,IAAD,CAAiBO,KAAM0F,QAChH,cAAC,IAAD,CAAiB1F,KAAMnG,EAAQb,EAAKc,SAEtC,sBAAK+E,UAAS,8BAAyBmJ,EAAqB,EAAI,+BAAiC,IAAjG,UACE,0BAASnJ,UAAU,sBAAnB,UACE,sBAAKA,UAAU,6BAAf,iBAAiDqJ,EAAM3L,UACvD,qBAAKsC,UAAU,2BAAf,SACIqJ,OAGN,0BAASrJ,UAAU,sBAAnB,UACE,sBAAKA,UAAU,6BAAf,oBAAoDsJ,EAAS5L,UAC7D,qBAAKsC,UAAU,2BAAf,SACIsJ,UAIR,0BAAStJ,UAAU,sBAAnB,UACE,qBAAKA,UAAU,6BAAf,iBACA,qBAAKA,UAAU,eAAf,SACIwJ,OAGN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOb,KAAI,UAAKA,EAAL,cAAX,SACE,cAAC,EAAD,CAAa1B,YAAaA,YCjErB2C,GAbF,WAAO,IACVjB,EAASD,cAATC,KAER,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,UAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUzI,GAAE,UAAKyI,EAAL,mB,kBC8BHkB,I,OAtCiI,SAAC,GAAkC,IAAhC3F,EAA+B,EAA/BA,MAAOS,EAAwB,EAAxBA,OAAQmF,EAAgB,EAAhBA,UAChK,OACE,qBAAK9J,UAAU,sBAAf,SACI,cAAC,SAAD,CACE+J,cAAc,EACdpF,OAAQA,EACRqF,KAAM,EACNhG,IAAKE,EAAM,GACXD,IAAKC,EAAM,GACX5D,SAAU,SAACqE,GAAD,OAAYmF,EAAU,CAACnF,EAAO,GAAIA,EAAO,MACnDsF,YAAa,gBAAGhL,EAAH,EAAGA,MAAOU,EAAV,EAAUA,SAAV,OACX,qBACEuK,YAAajL,EAAMiL,YACnBC,aAAclL,EAAMkL,aACpBzH,MAAOzD,EAAMyD,MACb1C,UAAU,6BAJZ,SAME,qBACEwC,IAAKvD,EAAMuD,IACXxC,UAAU,6BAFZ,SAIGL,OAIPyK,YAAa,gBAAGnL,EAAH,EAAGA,MAAkBmG,GAArB,EAAUiF,UAAV,EAAqBjF,OAArB,OACX,+CACMnG,GADN,IAEEe,UAAU,6BAFZ,SAIG2E,EAAOS,aCwJPkF,I,OA/KE,WAAO,IACdzO,EAAW8E,cAAX9E,OADa,EAEqCkE,qBAAWpB,GAA7DE,EAFa,EAEbA,YAAaR,EAFA,EAEAA,gBAAiBI,EAFjB,EAEiBA,gBAChC8L,EAAW1L,EAAYhD,GACvB+E,EAAcb,qBAAWc,IAEzBnC,EAAWL,EAAgBxC,GANZ,EAQDqD,mBAASR,EAAS3D,EAAES,GAAK,GARxB,mBAQdgP,EARc,KAQVC,EARU,OASCvL,mBAASR,EAAS3D,EAAER,IATrB,mBASdmQ,EATc,KASTC,EATS,OAUCzL,mBAASR,EAAS3D,EAAEP,IAVrB,mBAUdoQ,EAVc,KAUTC,EAVS,OAWD3L,mBAASR,EAAShD,EAAEF,GAAK,GAXxB,mBAWdsP,EAXc,KAWVC,EAXU,OAYC7L,mBAASR,EAAShD,EAAEnB,IAZrB,mBAYdyQ,EAZc,KAYTC,EAZS,OAaC/L,mBAASR,EAAShD,EAAElB,IAbrB,mBAad0Q,EAbc,KAaTC,EAbS,OAcDjM,mBAASR,EAASlD,EAAEA,GAAK,GAdxB,mBAcd4P,EAdc,KAcVC,EAdU,OAeCnM,mBAASR,EAASlD,EAAEjB,IAfrB,mBAed+Q,EAfc,KAeTC,EAfS,OAgBCrM,mBAASR,EAASlD,EAAEhB,IAhBrB,mBAgBdgR,EAhBc,KAgBTC,GAhBS,QAiBDvM,mBAASR,EAAS/C,EAAEH,GAAK,GAjBxB,qBAiBdkQ,GAjBc,MAiBVC,GAjBU,SAkBCzM,mBAASR,EAAS/C,EAAEpB,IAlBrB,qBAkBdqR,GAlBc,MAkBTC,GAlBS,SAmBC3M,mBAASR,EAAS/C,EAAEnB,IAnBrB,qBAmBdsR,GAnBc,MAmBTC,GAnBS,MAqBfC,GAAQ7J,iBAAOzD,EAASqC,IAY9B,OAVAoE,qBAAU,WACR1G,EAAgB5C,EAAQ,CACtBd,EAAG,CAAES,EAAGgP,EAAIjQ,GAAImQ,EAAKlQ,GAAIoQ,GACzBlP,EAAG,CAAEF,EAAGsP,EAAIvQ,GAAIyQ,EAAKxQ,GAAI0Q,GACzB1P,EAAG,CAAEA,EAAG4P,EAAI7Q,GAAI+Q,EAAK9Q,GAAIgR,GACzB7P,EAAG,CAAEH,EAAGkQ,GAAInR,GAAIqR,GAAKpR,GAAIsR,IACzB/K,GAAIiL,GAAM1J,YAEX,CAACkI,EAAIE,EAAKE,EAAKE,EAAIE,EAAKE,EAAKE,EAAIE,EAAKE,EAAKE,GAAIE,GAAKE,GAAKjQ,EAAQ4C,IAGlE,sBAAKuB,UAAU,gBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAD,CAAMA,UAAS,mDAAsDE,GAAE,UAAKU,EAAL,SAAvE,SAAgG,cAAC,IAAD,CAAiBO,KAAM0F,QACvH,uBAAM7G,UAAU,8BAAhB,0BAA4DuK,QAE9D,sBAAKvK,UAAU,oDAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBmB,KAAMjG,QAEzB,sBAAK8E,UAAU,8BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,2BACA,gCACE,sBAAKA,UAAU,sBAAsBc,QAAS,kBAAM2J,EAAM,IAA1D,UACE,cAAC,IAAD,CAAiBtJ,KAAa,IAAPqJ,EAAWyB,KAAgBC,OAClD,mDAEF,sBAAKlM,UAAU,sBAAsBc,QAAS,kBAAM2J,EAAM,IAA1D,UACA,cAAC,IAAD,CAAiBtJ,KAAa,IAAPqJ,EAAWyB,KAAgBC,OAChD,4DAIN,sBAAKlM,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,4BACA,sBAAKA,UAAU,iCAAf,UACE,cAAC,GAAD,CAAOkE,MAAOzI,EAAgBV,EAAER,GAAIoK,OAAQ+F,EAAKZ,UAAWa,IAC5D,cAAC,GAAD,CAAOzG,MAAOzI,EAAgBV,EAAEP,GAAImK,OAAQiG,EAAKd,UAAWe,IAC5D,sBAAK7K,UAAU,gCAAf,UACE,gCAAO3F,EAAWF,EAAKO,UAAUgQ,EAAI,GAAIE,EAAI,IAA7C,MAAuDF,EAAI,GAAKE,EAAI,MACpE,qBAAK5K,UAAU,6BAAf,SAA4C,cAAC,IAAD,CAAiBmB,KAAMgL,QACnE,qBAAKnM,UAAU,4BAAf,SAA2C,cAAC,IAAD,CAAiBmB,KAAMiL,QAClE,gCAAO/R,EAAWF,EAAKO,UAAUgQ,EAAI,GAAIE,EAAI,IAA7C,MAAuDF,EAAI,GAAKE,EAAI,qBAM9E,sBAAK5K,UAAU,uDAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBmB,KAAMhG,QAEzB,sBAAK6E,UAAU,8BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,2BACA,gCACE,sBAAKA,UAAU,sBAAsBc,QAAS,kBAAMiK,EAAM,IAA1D,UACE,cAAC,IAAD,CAAiB5J,KAAa,IAAP2J,EAAWmB,KAAgBC,OAClD,mDAEF,sBAAKlM,UAAU,sBAAsBc,QAAS,kBAAMiK,EAAM,IAA1D,UACA,cAAC,IAAD,CAAiB5J,KAAa,IAAP2J,EAAWmB,KAAgBC,OAChD,4DAIN,sBAAKlM,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,4BACA,sBAAKA,UAAU,iCAAf,UACE,cAAC,GAAD,CAAOkE,MAAOzI,EAAgBC,EAAEnB,GAAIoK,OAAQqG,EAAKlB,UAAWmB,IAC5D,cAAC,GAAD,CAAO/G,MAAOzI,EAAgBC,EAAElB,GAAImK,OAAQuG,EAAKpB,UAAWqB,IAC5D,sBAAKnL,UAAU,gCAAf,UACE,gCAAO3F,EAAWF,EAAKQ,aAAaqQ,EAAI,GAAIE,EAAI,IAAhD,MAA0DA,EAAI,MAC9D,qBAAKlL,UAAU,6BAAf,SAA4C,cAAC,IAAD,CAAiBmB,KAAMgL,QACnE,qBAAKnM,UAAU,4BAAf,SAA2C,cAAC,IAAD,CAAiBmB,KAAMiL,QAClE,gCAAO/R,EAAWF,EAAKQ,aAAaqQ,EAAI,GAAIE,EAAI,IAAhD,MAA0DA,EAAI,qBAMxE,sBAAKlL,UAAU,0DAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBmB,KAAM/F,QAEzB,sBAAK4E,UAAU,8BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,2BACA,gCACE,sBAAKA,UAAU,sBAAsBc,QAAS,kBAAMuK,EAAM,IAA1D,UACE,cAAC,IAAD,CAAiBlK,KAAa,IAAPiK,EAAWa,KAAgBC,OAClD,mDAEF,sBAAKlM,UAAU,sBAAsBc,QAAS,kBAAMuK,EAAM,IAA1D,UACA,cAAC,IAAD,CAAiBlK,KAAa,IAAPiK,EAAWa,KAAgBC,OAChD,4DAIN,sBAAKlM,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,4BACA,sBAAKA,UAAU,iCAAf,UACE,cAAC,GAAD,CAAOkE,MAAOzI,EAAgBD,EAAEjB,GAAIoK,OAAQ2G,EAAKxB,UAAWyB,IAC5D,cAAC,GAAD,CAAOrH,MAAOzI,EAAgBD,EAAEhB,GAAImK,OAAQ6G,EAAK1B,UAAW2B,KAC5D,sBAAKzL,UAAU,gCAAf,UACE,gCAAO3F,EAAWF,EAAKS,gBAAgB0Q,EAAI,GAAIE,EAAI,IAAnD,MAA6DF,EAAI,GAAKE,EAAI,MAC1E,qBAAKxL,UAAU,6BAAf,SAA4C,cAAC,IAAD,CAAiBmB,KAAMgL,QACnE,qBAAKnM,UAAU,4BAAf,SAA2C,cAAC,IAAD,CAAiBmB,KAAMiL,QAClE,gCAAO/R,EAAWF,EAAKS,gBAAgB0Q,EAAI,GAAIE,EAAI,IAAnD,MAA6DF,EAAI,GAAKE,EAAI,qBAMpF,sBAAKxL,UAAU,oDAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,IAAD,CAAiBmB,KAAM9F,QAEzB,sBAAK2E,UAAU,8BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,2BACA,gCACE,sBAAKA,UAAU,sBAAsBc,QAAS,kBAAM6K,GAAM,IAA1D,UACE,cAAC,IAAD,CAAiBxK,KAAa,IAAPuK,GAAWO,KAAgBC,OAClD,mDAEF,sBAAKlM,UAAU,sBAAsBc,QAAS,kBAAM6K,GAAM,IAA1D,UACA,cAAC,IAAD,CAAiBxK,KAAa,IAAPuK,GAAWO,KAAgBC,OAChD,4DAIN,sBAAKlM,UAAU,2BAAf,UACE,qBAAKA,UAAU,kCAAf,4BACA,sBAAKA,UAAU,iCAAf,UACE,cAAC,GAAD,CAAOkE,MAAOzI,EAAgBE,EAAEpB,GAAIoK,OAAQiH,GAAK9B,UAAW+B,KAC5D,cAAC,GAAD,CAAO3H,MAAOzI,EAAgBE,EAAEnB,GAAImK,OAAQmH,GAAKhC,UAAWiC,KAC5D,sBAAK/L,UAAU,gCAAf,UACE,gCAAO3F,EAAWF,EAAKU,UAAU+Q,GAAI,GAAIE,GAAI,IAA7C,MAAuDA,GAAI,MAC3D,qBAAK9L,UAAU,6BAAf,SAA4C,cAAC,IAAD,CAAiBmB,KAAMgL,QACnE,qBAAKnM,UAAU,4BAAf,SAA2C,cAAC,IAAD,CAAiBmB,KAAMiL,QAClE,gCAAO/R,EAAWF,EAAKU,UAAU+Q,GAAI,GAAIE,GAAI,IAA7C,MAAuDA,GAAI,0BC/H5DO,I,OAtCmD,SAAC,GASjE,IAT+E,IAAZpR,EAAW,EAAXA,KAE3DY,EAAW8E,cAAX9E,OACF+E,EAAcb,qBAAWc,IAH+C,EAIrBd,qBAAWpB,GAA5DxC,EAJsE,EAItEA,wBAEFY,GAAeC,EANyD,EAI7CA,qBAEQnB,EAAQ1B,EAAKc,IAElD+I,EAVY,EAWPvH,EAAIM,EAAaxC,GAAG,GAAIkC,GAAKM,EAAaxC,GAAG,GAAIkC,IACxD,IAAK,IAAIS,EAAIH,EAAavC,GAAG,GAAI0C,GAAKH,EAAavC,GAAG,GAAI0C,IACxD8G,EAAMM,KAAKN,IAAIA,EAAK7H,EAAwBN,EAAQxB,EAAWY,GAAMwB,EAAGS,IAAIQ,QAIhF,OACE,sBAAKsC,UAAS,uCAAkC/E,GAAhD,UACE,qBAAK+E,UAAU,qBAAf,SACE,cAAC,IAAD,CAAiBmB,KAAMnG,EAAQb,EAAKc,QAEtC,eAAC,IAAD,CAAM+E,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,eAA1E,UAAsH,cAAC,IAAD,CAAiBkG,KAAMC,MAAS,0CACtJ,sBAAKpB,UAAU,sBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,eAAC,IAAD,CAAMA,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,cAA1E,UAAqH,cAAC,IAAD,CAAiBkG,KAAMC,MAAS,yCACrJ,eAAC,IAAD,CAAMpB,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,cAA1E,UAAqH,cAAC,IAAD,CAAiBkG,KAAMC,MAAS,yCACrJ,eAAC,IAAD,CAAMpB,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,cAA1E,UAAqH,cAAC,IAAD,CAAiBkG,KAAMC,MAAS,4CAEvJ,sBAAKpB,UAAS,4BAAuBgE,EA7B3B,EA6B6C,8BAAgC,IAAvF,UACE,eAAC,IAAD,CAAMhE,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,eAA1E,UAAsH,cAAC,IAAD,CAAiBkG,KAAME,MAAa,wCAC1J,eAAC,IAAD,CAAMrB,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,gBAA1E,UAAuH,cAAC,IAAD,CAAiBkG,KAAME,MAAa,yCAC3J,eAAC,IAAD,CAAMrB,UAAS,sDAAiD/E,GAAQiF,GAAE,UAAKU,EAAL,iBAAyB3F,EAAzB,gBAA1E,UAAuH,cAAC,IAAD,CAAiBkG,KAAME,MAAa,+CAG/J,eAAC,IAAD,CAAMrB,UAAS,uDAAkD/E,GAAQiF,GAAE,UAAKU,EAAL,mBAA2B3F,GAAtG,UAA8G,cAAC,IAAD,CAAiBkG,KAAMG,MAAc,kDC9B5IT,I,OAAqBjC,wBAAc,KAoDjC0N,GAlDF,WAAO,IACVzQ,EAAW8E,cAAX9E,OADS,EAEK6M,cAAdC,EAFS,EAETA,KAAMC,EAFG,EAEHA,IAFG,EAGwB7I,qBAAWpB,GAA5CE,EAHS,EAGTA,YAAaR,EAHJ,EAGIA,gBACfkM,EAAW1L,EAAYhD,GACvB6C,EAAWL,EAAgBxC,GAE3B0Q,EAAiB7D,YAAc,2BACrC,OAAKhK,EAASqC,KAAM,OAACwL,QAAD,IAACA,OAAD,EAACA,EAAgBC,SAKnC,qBAAKxM,UAAU,OAAf,SACE,cAACa,GAAmBzB,SAApB,CAA6BC,MAAOuJ,EAApC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAI,UAAKA,EAAL,cAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,iBAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,mCAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WAAX,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,aAAX,SACE,cAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,SAAX,UACE,sBAAK3I,UAAU,eAAf,UACE,cAAC,IAAD,CAAMA,UAAS,+CAAkDE,GAAG,SAApE,SAA6E,cAAC,IAAD,CAAiBiB,KAAMsL,QACpG,uBAAMzM,UAAU,iBAAhB,qBAA0CuK,EAA1C,OACA,cAAC,IAAD,CAAMvK,UAAS,kDAAqDE,GAAE,UAAK0I,EAAL,iBAAtE,SAA+F,cAAC,IAAD,CAAiBzH,KAAMuL,WAExH,qBAAK1M,UAAU,kBAAf,SACK2M,OAAOC,KAAKzS,GAAgCoP,QAAO,SAAA/N,GAAC,OAAIA,IAAMrB,EAAKG,QAAM2F,KAAI,SAAAzE,GAAC,OAAK,cAAC,GAAD,CAAmBP,KAAMO,GAATA,QAExG,eAAC,IAAD,CAAMwE,UAAU,mDAAmDE,GAAE,UAAK0I,EAAL,aAArE,UAA0F,cAAC,IAAD,CAAiBzH,KAAMI,MAAY,+CAC9G,kBAAbgJ,EAA+B,qBAAKvK,UAAU,aAAf,8DAAqF,QAExH,cAAC,IAAD,CAAUE,GAAE,UAAK0I,EAAL,kBAlCV,cAAC,IAAD,CAAU1I,GAAE,UAAK0I,EAAL,iBCUTiE,GAtBH,WACV,OACE,qBAAK7M,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2I,KAAM,gBAAb,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUzI,GAAG,uBCdrB4M,GAAcC,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAe3K,GACtC4K,UAAUC,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BxP,QAAQyP,IACN,+GAKEvL,GAAUA,EAAOwL,UACnBxL,EAAOwL,SAASR,KAMlBlP,QAAQyP,IAAI,sCAGRvL,GAAUA,EAAOyL,WACnBzL,EAAOyL,UAAUT,WAO5BU,OAAM,SAAC3P,GACND,QAAQC,MAAM,4CAA6CA,MCjGjE,IAYe4P,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SFcnB,SAAkBvM,GACvB,GAA6C,kBAAmB4K,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,YAAwBpH,OAAOkF,SAASmC,MACpDC,SAAWtH,OAAOkF,SAASoC,OAIvC,OAGFtH,OAAOuH,iBAAiB,QAAQ,WAC9B,IAAMjC,EAAK,UAAM8B,YAAN,sBAEPpC,KAgEV,SAAiCM,EAAe3K,GAE9C6M,MAAMlC,EAAO,CACXmC,QAAS,CAAE,iBAAkB,YAE5B/B,MAAK,SAACgC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYnK,QAAQ,cAG5C+H,UAAUC,cAAcsC,MAAMpC,MAAK,SAACC,GAClCA,EAAaoC,aAAarC,MAAK,WAC7B1F,OAAOkF,SAAS8C,eAKpB3C,GAAgBC,EAAO3K,MAG1B0L,OAAM,WACL5P,QAAQyP,IAAI,oEAtFV+B,CAAwB3C,EAAO3K,GAI/B4K,UAAUC,cAAcsC,MAAMpC,MAAK,WACjCjP,QAAQyP,IACN,+GAMJb,GAAgBC,EAAO3K,OEpC/BuN,GAKA5B,M","file":"static/js/main.9e47ac90.chunk.js","sourcesContent":["import { faPlus, faMinus, faTimes, faDivide, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\nexport enum Mode {\n  none = 'none',\n  addition = 'addition',\n  subtraction = 'subtraction',\n  multiplication = 'multiplication',\n  division = 'division'\n}\n\nexport enum QuestionSet {\n  random = 'random',\n  targeted = 'targeted'\n}\n\nexport const formatters: { [key in Mode]: (n1: number, n2: number) => string } = {\n  [Mode.none]: (n1, n2) => { throw new Error('formatter called on mode None') },\n  [Mode.addition]: (n1, n2) => `${n1} + ${n2}`,\n  [Mode.subtraction]: (n1, n2) => `${n1 + n2} - ${n1}`,\n  [Mode.multiplication]: (n1, n2) => `${n1} x ${n2}`,\n  [Mode.division]: (n1, n2) => `${n1 * n2} ÷ ${n1}`\n};\n\nexport const checkers: { [key in Mode]: (n1: number, n2: number, a: number) => boolean } = {\n  [Mode.none]: (n1, n2) => { throw new Error('check answer called on mode None') },\n  [Mode.addition]: (n1, n2, a) => n1 + n2 === a,\n  [Mode.subtraction]: (n1, n2, a) => n2 === a,\n  [Mode.multiplication]: (n1, n2, a) => n1 * n2 === a,\n  [Mode.division]: (n1, n2, a) => n2 === a\n};\n\nexport const getIcon: (mode: Mode) => IconDefinition = mode => {\n  switch (mode) {\n    case Mode.addition:\n      return faPlus;\n    case Mode.subtraction:\n      return faMinus;\n    case Mode.multiplication:\n      return faTimes;\n    case Mode.division:\n      return faDivide;\n  }\n  return faPlus;\n}\n","import React, { FunctionComponent, createContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Mode, formatters } from './modes';\n\nexport type IncorrectResponseData = {\n  a: number;\n  e: number;\n}\n\nexport type ResponseData = {\n  t: number;\n  i: IncorrectResponseData[];\n  e: number;\n}\n\nexport type ModeSettings = {\n  m: number,\n  n1: [number, number];\n  n2: [number, number];\n}\n\nexport type UserSettings = {\n  a: ModeSettings;\n  s: ModeSettings;\n  m: ModeSettings;\n  d: ModeSettings;\n  pa?: number;\n}\n\nconst defaultRange: [number, number] = [0, 12];\nconst defaultModeSettings: ModeSettings = { m: 1, n1: [...defaultRange], n2: [...defaultRange] };\n\nexport const defaultSettings: UserSettings = {\n  a: { ...defaultModeSettings },\n  s: { ...defaultModeSettings },\n  m: { ...defaultModeSettings },\n  d: { m: 1, n1: [1, 12], n2: [...defaultRange] }\n};\n\nconst logAnswer = (userId: string, question: string, startTime: number, endTime: number, incorrectAnswers: IncorrectResponseData[]) => {\n  const data = getQuestionResponseData(userId, question);\n  localStorage.setItem(`${userId} ${question}`, JSON.stringify([\n    { t: endTime, i: incorrectAnswers, e: endTime - startTime },\n    ...data.slice(0, 19)\n  ]));\n}\n\nconst getQuestionResponseData = (userId: string, question: string) =>\n  JSON.parse(localStorage.getItem(`${userId} ${question}`) || '[]');\n\nconst getReport = (userId: string, mode: Mode) => {\n  const data: { [key: string]: ResponseData[] } = {};\n\n  const modeSettings = getUserModeSettings(userId, Mode[mode]);\n\n  const allResponseTimes: number[] = [];\n  for (let i = modeSettings.n1[0]; i <= modeSettings.n1[1]; i++) {\n    for (let j = modeSettings.n2[0]; j <= modeSettings.n2[1]; j++) {\n      const q = formatters[mode](i, j);\n      data[q] = getQuestionResponseData(userId, q);\n      data[q].forEach(o => allResponseTimes.push(o.e));\n    }\n  }\n  allResponseTimes.sort((a, b) => a - b);\n  const fastest = allResponseTimes.length > 0 ? allResponseTimes[0] : 0;\n  const slowest = allResponseTimes.length > 0 ? allResponseTimes[allResponseTimes.length - 1] : 0;\n\n  const getWeightedData = (data: ResponseData[]) => {\n    if (data.length === 0) {\n      return [0, 0];\n    }\n    let weightedElapsed = 0, weightedIncorrect = 0, totalWeights = 0;\n    for (let i = data.length - 1, w = 1; i >= 0; totalWeights += w, w *= 2, i--) {\n      weightedElapsed += data[i].e * w;\n      weightedIncorrect += (data[i].i.length > 0 ? 1 : 0) * w;\n    }\n    return [weightedElapsed / totalWeights, weightedIncorrect / totalWeights];\n  }\n\n  const getScore = (data: ResponseData[]) => {\n    if (data.length === 0) {\n      return -1;\n    }\n    const [weightedElapsed, weightedIncorrect] = getWeightedData(data);\n    const relativeElapsed = ((weightedElapsed | fastest) - fastest) / ((slowest - fastest) | 1);\n    const overallElapsed = allResponseTimes.findIndex(e => e >= weightedElapsed) / allResponseTimes.length;\n    return (relativeElapsed + overallElapsed + weightedIncorrect) / 3;\n  }\n\n  const n1n2QuestionScore: [number, number, string, number][] = [];\n  for (let i = modeSettings.n1[0]; i <= modeSettings.n1[1]; i++) {\n    for (let j = modeSettings.n2[0]; j <= modeSettings.n2[1]; j++) {\n      const q = formatters[mode](i, j);\n      const score = getScore(data[q]);\n      n1n2QuestionScore.push([i, j, q, score]);\n    }\n  }\n  return n1n2QuestionScore;\n}\n\nconst getUserSettings: (id: string) => UserSettings = (id: string) =>\n  JSON.parse(localStorage.getItem(`${id}-settings`) || JSON.stringify(defaultSettings));\n\nconst getUserModeSettings: (id: string, mode: Mode) => ModeSettings = (id: string, mode: Mode) => {\n  switch (mode) {\n    case Mode.addition:\n      return getUserSettings(id).a;\n    case Mode.subtraction:\n      return getUserSettings(id).s;\n    case Mode.multiplication:\n      return getUserSettings(id).m;\n    case Mode.division:\n      return getUserSettings(id).d;\n  }\n  console.error('Mode not recognized in getUserModeSettings');\n  return { ...defaultModeSettings };\n}\n\nconst setUserSettings = (id: string, settings: UserSettings) => {\n  localStorage.setItem(`${id}-settings`, JSON.stringify(settings));\n}\n\nexport const DataStoreContext = createContext<{\n  logAnswer: (userId: string, question: string, startTime: number, endTime: number, incorrectAnswers: IncorrectResponseData[]) => void,\n  getQuestionResponseData: (userId: string, question: string) => ResponseData[],\n  getUserName: (id: string) => string,\n  createNewUser: (name: string) => void,\n  userList: [string, string][],\n  getReport: (userId: string, mode: Mode) => [number, number, string, number][],\n  getUserSettings: (id: string) => UserSettings,\n  getUserModeSettings: (id: string, mode: Mode) => ModeSettings,\n  setUserSettings: (id: string, settings: UserSettings) => void\n}>({\n  logAnswer: () => {},\n  getQuestionResponseData: () => [],\n  getUserName: () => '',\n  createNewUser: () => {},\n  userList: [],\n  getReport: () => [],\n  getUserSettings: () => defaultSettings,\n  getUserModeSettings: () => ({ ...defaultModeSettings }),\n  setUserSettings: () => {}\n});\n\nconst DataStore: FunctionComponent = (props) => {\n  \n  const [userList, setUserList] = useState<[string, string][]>(JSON.parse(localStorage.getItem('UserList') || '[]')); \n\n  const createNewUser = (name: string) => {\n    const list: [string, string][] = [...userList, [name, uuidv4()]];\n    setUserList(list);\n    localStorage.setItem('UserList', JSON.stringify(list));\n  }\n\n  const getUserName = (id: string) => (userList.find(u => u[1] === id) || [])[0] || 'error retrieving username';\n\n  return (\n    <DataStoreContext.Provider value={{\n      logAnswer,\n      getQuestionResponseData,\n      getUserName,\n      createNewUser,\n      userList,\n      getReport,\n      getUserSettings,\n      getUserModeSettings,\n      setUserSettings\n    }}>\n      { props.children }\n    </DataStoreContext.Provider>\n  );\n}\n\nexport default DataStore;\n","import React, { useState, FormEvent, ChangeEvent, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './index.css';\nimport { DataStoreContext } from '../dataStore';\n\nconst Users = () => {\n  const [username, setUsername] = useState<string>('');\n  const { createNewUser, userList } = useContext(DataStoreContext);\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    createNewUser(username);\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUsername(e.currentTarget.value);\n  }\n\n  return (\n    <div className=\"user-list\">\n      { userList.map(u => (<Link className=\"link-button link-button--app user-list__user\" key={u[1]} to={`user/${u[1]}/home`}>{u[0]}</Link>)) }\n      <form className=\"user-list__form\" onSubmit={handleSubmit}>\n        <input className=\"user-list__username\" type=\"text\" name=\"username\" onChange={handleInputChange} value={username} placeholder=\"New User\" required />\n        <button className=\"user-list__create\" type=\"submit\">Create</button>\n      </form>\n    </div>\n  )\n};\n\nexport default Users;\n","import React, { useContext } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { DataStoreContext } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport './index.css';\n\nconst Agreement = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { getUserSettings, setUserSettings } = useContext(DataStoreContext);\n\n  const accept = () => {\n    const settings = getUserSettings(userId);\n    settings.pa = Date.now();\n    setUserSettings(userId, settings);\n  }\n\n  return (\n    <div className=\"agreement\">\n      <div className=\"agreement__header\">Privacy Agreement</div>\n      <div>We value your privacy</div>\n      <div>No user data is sent over the network at any time while using this app</div>\n      <div>All data is stored in the local browser storage</div>\n      <div>By continuing you agree to allow this app to store data in the local browser storage</div>\n      <div>Note: to accurately capture progress always use the same browser (Chrome, Edge, Safari, etc.) on the same device when using this app</div>\n      <div><Link className=\"link-button link-button--small link-button--app\" to={`${userBaseUrl}/instructions`} onClick={accept}><span>Accept</span></Link></div>\n      <div><Link className=\"link-button link-button--small link-button--app\" to=\"/users\"><span>Reject</span></Link></div>\n    </div>\n  );\n};\n\nexport default Agreement;\n","import React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus, faTimes, faDivide, faBullseye, faDice, faChartLine, faUserCog } from '@fortawesome/free-solid-svg-icons'\nimport { UserBaseUrlContext } from '../';\nimport './index.css';\n\nconst Instructions = () => {\n  const userBaseUrl = useContext(UserBaseUrlContext);\n\n  return (\n    <div className=\"instructions\">\n      <div className=\"instructions__header\">\n        <span className=\"instructions__title\">Instructions</span>\n      </div>\n      <section className=\"instructions__section instructions__topic-break\">\n        <div>This app makes it easy to practice</div>\n        <div className=\"instructions__button-set\">\n          <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faPlus}/><span>Addition</span></div>\n          <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faMinus}/><span>Subtraction</span></div>\n          <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faTimes}/><span>Multiplication</span></div>\n          <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faDivide}/><span>Division</span></div>\n        </div>\n      </section>\n      <section className=\"instructions__section instructions__topic-break\">\n        <div className=\"instructions__section-header\"><FontAwesomeIcon icon={faDice}/> Random</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Select to practice all questions in a random order</div>\n        <div className=\"instructions__button-set\">\n          <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faDice}/><span>All</span></div>\n          <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faDice}/><span>All</span></div>\n          <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faDice}/><span>All</span></div>\n          <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faDice}/><span>All</span></div>\n        </div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Select to practice randomly selected sets of questions</div>\n        <div className=\"instructions__button-set\">\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faDice}/><span>10</span></div>\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faDice}/><span>25</span></div>\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faDice}/><span>50</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faDice}/><span>10</span></div>\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faDice}/><span>25</span></div>\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faDice}/><span>50</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faDice}/><span>10</span></div>\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faDice}/><span>25</span></div>\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faDice}/><span>50</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faDice}/><span>10</span></div>\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faDice}/><span>25</span></div>\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faDice}/><span>50</span></div>\n          </div>\n        </div>\n      </section>\n      <section className=\"instructions__section instructions__topic-break\">\n        <div className=\"instructions__section-header\"><FontAwesomeIcon icon={faBullseye}/> Targeted</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Select to practice questions recently answered incorrectly and/or with the longest response time</div>\n        <div className=\"instructions__button-set\">\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faBullseye}/><span>5</span></div>\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faBullseye}/><span>10</span></div>\n            <div className=\"instructions__discipline background--addition\"><FontAwesomeIcon icon={faBullseye}/><span>25</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faBullseye}/><span>5</span></div>\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faBullseye}/><span>10</span></div>\n            <div className=\"instructions__discipline background--subtraction\"><FontAwesomeIcon icon={faBullseye}/><span>25</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faBullseye}/><span>5</span></div>\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faBullseye}/><span>10</span></div>\n            <div className=\"instructions__discipline background--multiplication\"><FontAwesomeIcon icon={faBullseye}/><span>25</span></div>\n          </div>\n          <div className=\"instructions__button-inner-set\">\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faBullseye}/><span>5</span></div>\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faBullseye}/><span>10</span></div>\n            <div className=\"instructions__discipline background--division\"><FontAwesomeIcon icon={faBullseye}/><span>25</span></div>\n          </div>\n        </div>\n        <div>Available once all questions have been answered at least once</div>\n      </section>\n      <section className=\"instructions__section instructions__topic-break\">\n        <div className=\"instructions__section-header\"><FontAwesomeIcon icon={faChartLine}/> Report</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div><span className=\"instructions__report instructions__green\">Green</span> questions are the fastest and most accurate</div>\n        <div><span className=\"instructions__report instructions__red\">Red</span> questions are the slowest and/or most innacurate</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Select any question to see a <span className=\"instructions__report\"><FontAwesomeIcon icon={faChartLine}/></span> chart showing accuracy and response times</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div><span className=\"instructions__report\">Top 10</span></div>\n        <div>10 fastest and most accurate questions</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div><span className=\"instructions__report\">Bottom 10</span></div>\n        <div>10 slowest and/or most innacurate questions</div>\n      </section>\n      <section className=\"instructions__section instructions__topic-break\">\n        <div className=\"instructions__section-header\"><FontAwesomeIcon icon={faUserCog}/> Settings</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Select between multiple choice and short answer</div>\n      </section>\n      <section className=\"instructions__section\">\n        <div>Adjust the range of questions to practice</div>\n      </section>\n      <section className=\"instructions__section\">\n        <Link className=\"link-button link-button--medium link-button--app\" to={`${userBaseUrl}/home`}><span>Got it!</span></Link>\n      </section>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React, { FunctionComponent, useRef, useState, createContext } from 'react';\nimport Reward from 'react-rewards';\nimport './index.css';\n\nconst confettiConfig = {\n  lifetime: 360,\n  angle: 90,\n  decay: 0.97,\n  spread: 360,\n  startVelocity: 23,\n  elementCount: 200,\n  elementSize: 14\n};\n\nexport const ConfettiContext = createContext(() => {});\n\nconst ConfettiLauncher: FunctionComponent = (props) => {\n  const confettiRef = useRef(null);\n  const [ show, setShow ] = useState(false);\n\n  const launchConfetti = () => {\n    (confettiRef.current as any).rewardMe();\n    setShow(true);\n  }\n\n  return (\n    <ConfettiContext.Provider value={launchConfetti}>\n      { props.children }\n      <div className=\"confetti-launcher\">\n        <Reward ref={confettiRef} type=\"confetti\" config={confettiConfig}><span></span></Reward>\n        <div className=\"confetti-launcher__message\"\n          style={{ display: show ? 'block' : 'none'}}\n          onAnimationEnd={e => {\n            setShow(false);\n          }}>Great work!</div>\n      </div>\n    </ConfettiContext.Provider>\n  )\n}\n\nexport default ConfettiLauncher;\n","import React, { FunctionComponent, useState } from 'react';\nimport './text.css';\n\nconst Text: FunctionComponent<{ checkAnswer: (a: number) => boolean }> = ({ checkAnswer }) => {\n\n  const [correct, setCorrect] = useState(false);\n  const [incorrect, setIncorrect] = useState(false);\n  const [answer, setAnswer] = useState('');\n\n  return (\n    <span className=\"text__wrapper\">\n      { !correct ? <></> :\n        <span className=\"text__answer-correct\"\n          onAnimationEnd={e => {\n            setCorrect(false);\n            setIncorrect(false);\n          }}>\n        </span>\n      }\n      { !incorrect ? <></> :\n        <span className=\"text__answer-incorrect\"\n          onAnimationEnd={e => {\n            setCorrect(false);\n            setIncorrect(false);\n          }}>\n        </span>\n      }\n      <input\n        className=\"text__answer\"\n        type=\"number\"\n        size={2}\n        autoFocus={true}\n        onBlur={e => {\n          e.preventDefault();\n          const target = e.currentTarget;\n          setTimeout(() => { target.focus(); }, 0);\n        }}\n        onChange={e => setAnswer(e.target.value.replace(/\\D/g,''))}\n        onKeyUp={e => {\n          if (e.key === 'Enter') {\n            if (e.currentTarget.value.length > 0) {\n              if (checkAnswer(Number(e.currentTarget.value))) {\n                setCorrect(true);\n                setAnswer('');\n              }\n              else {\n                setIncorrect(true);\n              }\n            }\n          }\n        }}\n        value={answer}>\n      </input>\n    </span>\n  );\n}\n\nexport default Text;\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { Mode } from '../../modes';\nimport './multipleChoice.css';\n\nconst randomize: (values: number[]) => number[] = values => {\n  const result = values.map(v => [v, Math.random()]);\n  result.sort((a, b) => a[1] - b[1]);\n  return result.map(v => v[0]);\n}\n\nconst generatePossibleIncorrects = (answer: number, min: number, max: number, range: number, specialWeights: { [key: number]: number }) => {\n  const possibleIncorrect: [number, number][] = [];\n  let offset = 1;\n  while (possibleIncorrect.length < range) {\n    if (answer - offset >= min) possibleIncorrect.push([answer - offset, Math.random() * (specialWeights[answer - offset] || 1)]);\n    if (answer + offset <= max) possibleIncorrect.push([answer + offset, Math.random() * (specialWeights[answer + offset] || 1)]);\n    offset++;\n  }\n  possibleIncorrect.sort((a, b) => b[1] - a[1]);\n  return possibleIncorrect.slice(0, 3).map(v => v[0]);\n}\n\nconst generateAnswers = (n1: number, n2: number, mode: keyof typeof Mode) => {\n  const answers: number[] = [];\n  switch (mode) {\n    case Mode.addition:\n      answers.push(n1 + n2, ...generatePossibleIncorrects(n1 + n2, 0, 30, 6, {\n        [n1 + n2 + 1]: 3,\n        [n1 + n2 - 1]: 3,\n        [n1 + n2 + 2]: 2,\n        [n1 + n2 - 2]: 2\n      }));\n      break;\n    case Mode.subtraction:\n      answers.push(n2, ...generatePossibleIncorrects(n2, 0, 14, 6, {\n        [n2 + 1]: 3,\n        [n2 - 1]: 3,\n        [n2 + 2]: 2,\n        [n2 - 2]: 2\n      }));\n      break;\n    case Mode.multiplication:\n      answers.push(n1 * n2, ...generatePossibleIncorrects(n1 * n2, 0, 150, 30, {\n        [n1 * n2 + 1]: 3,\n        [n1 * n2 - 1]: 3,\n        [n1 * n2 + 2]: 2,\n        [n1 * n2 - 2]: 2,\n        [(n1 + 1) * n2]: 3,\n        [(n1 - 1) * n2]: 3,\n        [n1 * (n2 + 1)]: 3,\n        [n1 * (n2 - 1)]: 3,\n        [(n1 + 2) * n2]: 2,\n        [(n1 - 2) * n2]: 2,\n        [n1 * (n2 + 2)]: 2,\n        [n1 * (n2 - 2)]: 2        \n      }));\n      break;\n    case Mode.division:\n      answers.push(n2, ...generatePossibleIncorrects(n2, 0, 14, 6, {\n        [n2 + 1]: 3,\n        [n2 - 1]: 3,\n        [n2 + 2]: 2,\n        [n2 - 2]: 2\n      }));\n      break;\n  }\n  return randomize(answers);\n}\n\nconst MultipleChoice: FunctionComponent<{\n  checkAnswer: (a: number) => boolean,\n  n1: number,\n  n2: number,\n  mode: keyof typeof Mode,\n  incorrectResponses: number[]\n}> = ({ checkAnswer, n1, n2, mode, incorrectResponses }) => {\n\n  const [answers, setAnswers] = useState([0, 0, 0, 0]);\n  const [correctIndex, setCorrectIndex] = useState<number>();\n\n  useEffect(() => void setAnswers(generateAnswers(n1, n2, mode)), [n1, n2, mode]);\n\n  const answerSelected = (answer: number, index: number) => {\n    const correct = checkAnswer(answer);\n    if (correct) {\n      setCorrectIndex(index);\n    }\n  }\n\n  return (\n    <div className=\"multiple-choice__grid\">\n    {\n      answers.map((a, index) => (\n        <div key={index} className=\"multiple-choice__answer-wrapper\">\n          { correctIndex === index ?\n              <span className=\"multiple-choice__answer-correct\"\n                onAnimationEnd={e => {\n                  setCorrectIndex(undefined);\n                }}>\n              </span>\n            : <></>\n          }\n          <button className={`multiple-choice__answer background--${mode}${ incorrectResponses.indexOf(a) === -1 ? '' : ' multiple-choice__answer--incorrect' }`} onClick={() => answerSelected(a, index)}>\n            <span className=\"multiple-choice__answer-text\">{a}</span>\n          </button>\n        </div>\n      ))\n    }\n    </div>\n  );\n}\n\nexport default MultipleChoice;\n","import React, { useContext, useState } from 'react';\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport './index.css';\nimport { DataStoreContext, IncorrectResponseData } from '../../dataStore';\nimport { ConfettiContext } from '../../confetti';\nimport { Mode, QuestionSet, formatters, checkers } from '../../modes';\nimport { UserBaseUrlContext } from '..';\nimport Text from './text';\nimport MultipleChoice from './multipleChoice';\n\nconst getRandom = (max: number) => Math.floor(Math.random() * (max + 1));\n\nconst generatePairs = (min1: number, max1: number, min2: number, max2: number) => {\n  const result: [number, number][] = [];\n  for (let i = min1; i <= max1; i++) {\n    for (let j = min2; j <= max2; j++) {\n      result.push([i, j]);\n    }\n  }\n  return result;\n}\n\nconst randomize: (questions: [number, number][]) => [number, number][] = questions => {\n  const result = questions.map(q => [...q, getRandom(1000)]);\n  result.sort((a, b) => a[2] - b[2]);\n  return result.map(v => [v[0], v[1]]);\n}\n\nconst digitRegex = /^\\d+$/;\n\nconst Game = () => {\n  const { userId, mode, questionset, count: countString } = useParams<{ userId: string, mode: keyof typeof Mode, questionset: keyof typeof QuestionSet, count: string }>();\n\n  const [index, setIndex] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [incorrectResponses, setIncorrectResponses] = useState<IncorrectResponseData[]>([]);\n  const { logAnswer, getReport, getUserModeSettings } = useContext(DataStoreContext);\n  const launchConfetti = useContext(ConfettiContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const history = useHistory();\n  const modeSettings = getUserModeSettings(userId, Mode[mode]);\n  const count = digitRegex.test(countString) ? +countString : (modeSettings.n1[1] - modeSettings.n1[0] + 1) * (modeSettings.n2[1] - modeSettings.n2[0] + 1);\n\n  const [inputs] = useState(\n    questionset === QuestionSet.targeted ?\n      randomize(getReport(userId, Mode[mode]).sort((a, b) => b[3] - a[3]).slice(0, count).map(v => [v[0], v[1]])) :\n      randomize(generatePairs(modeSettings.n1[0], modeSettings.n1[1], modeSettings.n2[0], modeSettings.n2[1])).slice(0, count)\n  );\n\n  const n1 = inputs[index][0];\n  const n2 = inputs[index][1];\n  const question = formatters[mode](n1, n2);\n\n  const checkAnswer = (answer: number) => {\n    if (checkers[mode](n1, n2, answer)) {\n      logAnswer(userId, question, startTime, Date.now(), incorrectResponses);\n      if (index + 1 >= inputs.length) {\n        launchConfetti();\n        history.replace(`${userBaseUrl}/report/${mode}`);\n      }\n      setIndex((index + 1) % inputs.length);\n      setIncorrectResponses([]);\n      setStartTime(Date.now());\n      return true;\n    } else {\n      setIncorrectResponses([{ a: answer, e: Date.now() - startTime }, ...incorrectResponses]);\n      return false;\n    }\n  }\n\n  return (\n    <div className={`game background-light--${mode}`}>\n      <Link className={`link-button link-button--app game__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n      <div className=\"game__question\">\n        <span>{ question }<span className=\"game__question-equals\"> =</span></span>\n        { modeSettings.m === 0 ?\n          <Text checkAnswer={checkAnswer} />\n          :\n          <MultipleChoice checkAnswer={checkAnswer} n1={n1} n2={n2} mode={mode} incorrectResponses={incorrectResponses.map(r => r.a)} />\n        }\n      </div>\n      <div className=\"game__status\">\n        <div className=\"game__progress\" style={{ width: (100 * index / inputs.length) + \"%\"}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useContext } from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { useSpring, animated } from 'react-spring';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './ItemDetails.css';\nimport { ResponseData, DataStoreContext } from '../../dataStore';\nimport { UserBaseUrlContext } from '..';\n\ninterface Props {\n  clickCoords: number[];\n}\n\nconst LineChart = ({ clickCoords }: Props) => {\n  const { userId, question, mode } = useParams<{ userId: string, question: string, mode: string }>();\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { getQuestionResponseData } = useContext(DataStoreContext);\n  const history = useHistory();\n\n  const data: ResponseData[] = getQuestionResponseData(userId, question);\n  data.reverse();\n\n  const chartData = {\n    labels: data.map((r, i) => i + 1),\n    datasets: [\n      {\n        label: 'Time',\n        data: data.map(r => r.e / 1000),\n        fill: false,\n        backgroundColor: 'rgb(97, 223, 101)',\n        borderColor: 'rgba(97, 223, 101)',\n      },\n      {\n        label: 'Incorrect',\n        data: data.map(r => r.i.length),\n        fill: false,\n        backgroundColor: 'rgb(253, 95, 95)',\n        borderColor: 'rgba(253, 95, 95)',\n      }\n    ],\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    }\n  }\n\n  const props = useSpring({\n    from: {\n      transform: 'translate(-50%, -50%) scale(0)',\n      top: ((clickCoords[1] * 100) / window.innerHeight) + 'vh',\n      left: ((clickCoords[0] * 100) / window.innerWidth) + 'vw'\n    },\n    to: {\n      transform: 'translate(-50%, -50%) scale(1)',\n      top: '50vh',\n      left: '50vw'\n    }\n  });\n\n  return (\n    <animated.div\n      style={props}\n      className={`item-details background-light--${mode}`} onClick={() => history.replace(`${userBaseUrl}/report/${mode}`)}>\n      <div className=\"item-details__header\">{question}</div>\n      <Line data={chartData} options={options} />\n      <div className=\"item-details__close\"><FontAwesomeIcon icon={faTimes}/></div>\n    </animated.div>\n  );\n}\n\nexport default LineChart\n","import React, { useState, useContext } from 'react';\nimport { Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { Mode, getIcon } from '../../modes';\nimport { DataStoreContext } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport './report.css';\nimport ItemDetails from './ItemDetails';\n\nconst getColorFromScore = (score: number) => score >= 0 ?\n  `rgb(${97 + (253 - 97) * score}, ${223 + (95 - 223) * score}, ${101 + (95 - 101) * score})`\n  : 'transparent';\n\nconst Report = () => {\n  const { userId, mode } = useParams<{ userId: string, mode: keyof typeof Mode }>();\n  const { path, url } = useRouteMatch();\n  const { getReport, getUserModeSettings } = useContext(DataStoreContext);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const [ clickCoords, setClickCoords ] = useState([0, 0]);\n\n  const questionAndScore = getReport(userId, Mode[mode]);\n  const modeSettings = getUserModeSettings(userId, Mode[mode]);\n  const lookup = questionAndScore.reduce<{ [key: number]: { [key: number]: [number, number, string, number] } }>((a, c) => {\n    if (!a[c[0]]) a[c[0]] = {};\n    a[c[0]][c[1]] = c;\n    return a;\n  }, {});\n  const sorted = [...questionAndScore];\n  sorted.sort((a, b) => a[3] - b[3]);\n  const firstAnsweredIndex = sorted.findIndex(q => q[3] >= 0);\n  const top10Start = Math.max(firstAnsweredIndex, 0);\n\n  const top10 = sorted.slice(top10Start, top10Start + 10).map(([n1, n2, q, score]) =>\n    <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>);\n  const bottom10 = sorted.slice(-10).filter(q => q[3] >= 0).map(([n1, n2, q, score]) =>\n    <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>);\n\n  const reportElements: JSX.Element[] = [];\n  for (let j = modeSettings.n2[0]; j <= modeSettings.n2[1]; j++) {\n    const currentSet: JSX.Element[] = [];\n    for (let i = modeSettings.n1[0]; i <= modeSettings.n1[1]; i++) {\n      const q = lookup[i][j][2];\n      const score = lookup[i][j][3];\n      currentSet.push(\n        <Link className=\"link-button link-button--xsmall link-button--report\" to={`${url}/${q}`} key={q} style={{ backgroundColor: getColorFromScore(score) }} replace><span>{q}</span></Link>\n      );\n    }\n    reportElements.push(\n      <div className=\"report__set\" key={j}>\n        { currentSet }\n      </div>\n    );\n  }\n  return (\n    <div className={`report background-light--${mode}`} onClick={e => setClickCoords([e.clientX, e.clientY])}>\n      <div className=\"report__header\">\n        <Link className={`link-button link-button--app report__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n        <FontAwesomeIcon icon={getIcon(Mode[mode])}/>\n      </div>\n      <div className={`report__leaderboards${firstAnsweredIndex < 0 ? ' report__leaderboards--empty' : ''}`}>\n        <section className=\"report__leaderboard\">\n          <div className=\"report__leaderboard-header\">Top {top10.length}</div>\n          <div className=\"report__leaderboard-body\">\n            { top10 }\n          </div>\n        </section>\n        <section className=\"report__leaderboard\">\n          <div className=\"report__leaderboard-header\">Bottom {bottom10.length}</div>\n          <div className=\"report__leaderboard-body\">\n            { bottom10 }\n          </div>\n        </section>\n      </div>\n      <section className=\"report__leaderboard\">\n        <div className=\"report__leaderboard-header\">All</div>\n        <div className=\"report__sets\">\n          { reportElements }\n        </div>\n      </section>\n      <Switch>\n        <Route path={`${path}/:question`}>\n          <ItemDetails clickCoords={clickCoords} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Report;\n","import React from 'react';\nimport Report from './report';\nimport { Route, Redirect, Switch, useRouteMatch } from 'react-router-dom';\n\nconst Home = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/:mode`}>\n        <Report />\n      </Route>\n      <Redirect to={`${path}/addition`} />\n    </Switch>\n  );\n}\n\nexport default Home;\n","import React, { FunctionComponent } from 'react';\nimport { Range } from 'react-range';\nimport './range.css';\n\nconst RangeComponent: FunctionComponent<{ range: [number, number], values: [number, number], setValues: (values: [number, number]) => void }> = ({ range, values, setValues }) => {\n  return (\n    <div className=\"user-settings-range\">\n        <Range\n          allowOverlap={false}\n          values={values}\n          step={1}\n          min={range[0]}\n          max={range[1]}\n          onChange={(values) => setValues([values[0], values[1]])}\n          renderTrack={({ props, children }) => (\n            <div\n              onMouseDown={props.onMouseDown}\n              onTouchStart={props.onTouchStart}\n              style={props.style}\n              className=\"user-settings-range__outer\"\n            >\n              <div\n                ref={props.ref}\n                className=\"user-settings-range__inner\"\n              >\n                {children}\n              </div>\n            </div>\n          )}\n          renderThumb={({ props, isDragged, index }) => (\n            <div\n              {...props}\n              className=\"user-settings-range__thumb\"\n            >\n              {values[index]}\n            </div>\n          )}\n        />\n      </div>\n  );\n}\n\nexport default RangeComponent;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faLongArrowAltDown, faLongArrowAltRight, faPlus, faMinus, faTimes, faDivide } from '@fortawesome/free-solid-svg-icons'\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { DataStoreContext, defaultSettings } from '../../dataStore';\nimport { UserBaseUrlContext } from '../';\nimport Range from './range';\nimport { Mode, formatters } from '../../modes';\nimport './index.css';\n\nconst Settings = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { getUserName, getUserSettings, setUserSettings } = useContext(DataStoreContext);\n  const userName = getUserName(userId);\n  const userBaseUrl = useContext(UserBaseUrlContext);\n\n  const settings = getUserSettings(userId);\n\n  const [am, setam] = useState(settings.a.m || 0);\n  const [an1, setan1] = useState(settings.a.n1);\n  const [an2, setan2] = useState(settings.a.n2);\n  const [sm, setsm] = useState(settings.s.m || 0);\n  const [sn1, setsn1] = useState(settings.s.n1);\n  const [sn2, setsn2] = useState(settings.s.n2);\n  const [mm, setmm] = useState(settings.m.m || 0);\n  const [mn1, setmn1] = useState(settings.m.n1);\n  const [mn2, setmn2] = useState(settings.m.n2);\n  const [dm, setdm] = useState(settings.d.m || 0);\n  const [dn1, setdn1] = useState(settings.d.n1);\n  const [dn2, setdn2] = useState(settings.d.n2);\n\n  const paRef = useRef(settings.pa);\n  \n  useEffect(() => {\n    setUserSettings(userId, {\n      a: { m: am, n1: an1, n2: an2 },\n      s: { m: sm, n1: sn1, n2: sn2 },\n      m: { m: mm, n1: mn1, n2: mn2 },\n      d: { m: dm, n1: dn1, n2: dn2 },\n      pa: paRef.current\n    })\n  }, [am, an1, an2, sm, sn1, sn2, mm, mn1, mn2, dm, dn1, dn2, userId, setUserSettings])\n\n  return (\n    <div className=\"user-settings\">\n      <div className=\"user-settings__header\">\n        <Link className={`link-button link-button--app user-settings__home`} to={`${userBaseUrl}/home`}><FontAwesomeIcon icon={faHome}/></Link>\n        <span className=\"user-settings__header-title\">Settings for {userName}</span>\n      </div>\n      <div className=\"user-settings__section background-light--addition\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faPlus}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Response Type</div>\n            <div>\n              <div className=\"user-settings__mode\" onClick={() => setam(0)}>\n                <FontAwesomeIcon icon={am === 0 ? faCheckSquare : faSquare } />\n                <span>Short Answer</span>\n              </div>\n              <div className=\"user-settings__mode\" onClick={() => setam(1)}>\n              <FontAwesomeIcon icon={am === 1 ? faCheckSquare : faSquare } />\n                <span>Multiple Choice</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Question Range</div>\n            <div className=\"user-settings__range-container\">\n              <Range range={defaultSettings.a.n1} values={an1} setValues={setan1} />\n              <Range range={defaultSettings.a.n2} values={an2} setValues={setan2} />\n              <div className=\"user-settings__question-range\">\n                <div>{ formatters[Mode.addition](an1[0], an2[0]) } = { an1[0] + an2[0] }</div>\n                <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n                <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n                <div>{ formatters[Mode.addition](an1[1], an2[1]) } = { an1[1] + an2[1] }</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--subtraction\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faMinus}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Response Type</div>\n            <div>\n              <div className=\"user-settings__mode\" onClick={() => setsm(0)}>\n                <FontAwesomeIcon icon={sm === 0 ? faCheckSquare : faSquare } />\n                <span>Short Answer</span>\n              </div>\n              <div className=\"user-settings__mode\" onClick={() => setsm(1)}>\n              <FontAwesomeIcon icon={sm === 1 ? faCheckSquare : faSquare } />\n                <span>Multiple Choice</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Question Range</div>\n            <div className=\"user-settings__range-container\">\n              <Range range={defaultSettings.s.n1} values={sn1} setValues={setsn1} />\n              <Range range={defaultSettings.s.n2} values={sn2} setValues={setsn2} />\n              <div className=\"user-settings__question-range\">\n                <div>{ formatters[Mode.subtraction](sn1[0], sn2[0]) } = { sn2[0] }</div>\n                <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n                <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n                <div>{ formatters[Mode.subtraction](sn1[1], sn2[1]) } = { sn2[1] }</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--multiplication\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faTimes}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Response Type</div>\n            <div>\n              <div className=\"user-settings__mode\" onClick={() => setmm(0)}>\n                <FontAwesomeIcon icon={mm === 0 ? faCheckSquare : faSquare } />\n                <span>Short Answer</span>\n              </div>\n              <div className=\"user-settings__mode\" onClick={() => setmm(1)}>\n              <FontAwesomeIcon icon={mm === 1 ? faCheckSquare : faSquare } />\n                <span>Multiple Choice</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Question Range</div>\n            <div className=\"user-settings__range-container\">\n              <Range range={defaultSettings.m.n1} values={mn1} setValues={setmn1} />\n              <Range range={defaultSettings.m.n2} values={mn2} setValues={setmn2} />\n              <div className=\"user-settings__question-range\">\n                <div>{ formatters[Mode.multiplication](mn1[0], mn2[0]) } = { mn1[0] * mn2[0] }</div>\n                <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n                <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n                <div>{ formatters[Mode.multiplication](mn1[1], mn2[1]) } = { mn1[1] * mn2[1] }</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user-settings__section background-light--division\">\n        <div className=\"user-settings__section-header\">\n          <FontAwesomeIcon icon={faDivide}/>\n        </div>\n        <div className=\"user-settings__section-body\">\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Response Type</div>\n            <div>\n              <div className=\"user-settings__mode\" onClick={() => setdm(0)}>\n                <FontAwesomeIcon icon={dm === 0 ? faCheckSquare : faSquare } />\n                <span>Short Answer</span>\n              </div>\n              <div className=\"user-settings__mode\" onClick={() => setdm(1)}>\n              <FontAwesomeIcon icon={dm === 1 ? faCheckSquare : faSquare } />\n                <span>Multiple Choice</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"user-settings__container\">\n            <div className=\"user-settings__container-header\">Question Range</div>\n            <div className=\"user-settings__range-container\">\n              <Range range={defaultSettings.d.n1} values={dn1} setValues={setdn1} />\n              <Range range={defaultSettings.d.n2} values={dn2} setValues={setdn2} />\n              <div className=\"user-settings__question-range\">\n                <div>{ formatters[Mode.division](dn1[0], dn2[0]) } = { dn2[0] }</div>\n                <div className=\"user-settings__right-arrow\"><FontAwesomeIcon icon={faLongArrowAltRight} /></div>\n                <div className=\"user-settings__down-arrow\"><FontAwesomeIcon icon={faLongArrowAltDown} /></div>\n                <div>{ formatters[Mode.division](dn1[1], dn2[1]) } = { dn2[1] }</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { FunctionComponent, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBullseye, faDice, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { UserBaseUrlContext } from './';\nimport { DataStoreContext } from '../dataStore';\nimport { Mode, formatters, getIcon } from '../modes';\nimport './modeLinks.css';\n\nconst THRESHOLD = 1;\n\nconst ModeLinks: FunctionComponent<{ mode: keyof typeof Mode }> = ({ mode }) => {\n\n  const { userId } = useParams<{ userId: string }>();\n  const userBaseUrl = useContext(UserBaseUrlContext);\n  const { getQuestionResponseData, getUserModeSettings } = useContext(DataStoreContext);\n\n  const modeSettings = getUserModeSettings(userId, Mode[mode]);\n\n  let min = THRESHOLD;\n  for (let i = modeSettings.n1[0]; i <= modeSettings.n1[1]; i++) {\n    for (let j = modeSettings.n2[0]; j <= modeSettings.n2[1]; j++) {\n      min = Math.min(min, getQuestionResponseData(userId, formatters[mode](i, j)).length);\n    }\n  }\n\n  return (\n    <div className={`mode-links background-light--${mode}`}>\n      <div className=\"mode-links__header\">\n        <FontAwesomeIcon icon={getIcon(Mode[mode])}/>\n      </div>\n      <Link className={`link-button link-button--large link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/all`}><FontAwesomeIcon icon={faDice}/><span>All</span></Link>\n      <div className=\"mode-links__subsets\">\n        <div className=\"mode-links__subset\">\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/10`}><FontAwesomeIcon icon={faDice}/><span>10</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/25`}><FontAwesomeIcon icon={faDice}/><span>25</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/random/50`}><FontAwesomeIcon icon={faDice}/><span>50</span></Link>\n        </div>\n        <div className={`mode-links__subset${min < THRESHOLD ? ' mode-links__subset--hidden' : ''}`}>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/5`}><FontAwesomeIcon icon={faBullseye}/><span>5</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/10`}><FontAwesomeIcon icon={faBullseye}/><span>10</span></Link>\n          <Link className={`link-button link-button--small link-button--${mode}`} to={`${userBaseUrl}/game/${mode}/targeted/25`}><FontAwesomeIcon icon={faBullseye}/><span>25</span></Link>\n        </div>\n      </div>\n      <Link className={`link-button link-button--medium link-button--${mode}`} to={`${userBaseUrl}/report/${mode}`}><FontAwesomeIcon icon={faChartLine}/><span>Report</span></Link>\n    </div>\n  );\n}\n\nexport default ModeLinks;\n","import React, { useContext, createContext } from 'react';\nimport { Link, Switch, Route, useParams, Redirect, useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCog, faUsers, faQuestion } from '@fortawesome/free-solid-svg-icons'\nimport { DataStoreContext } from '../dataStore';\nimport Agreement from './agreement';\nimport Instructions from './instructions';\nimport Game from './game';\nimport Report from './report';\nimport Settings from './settings';\nimport ModeLinks from './modeLinks';\nimport { Mode } from '../modes';\nimport './index.css';\n\nexport const UserBaseUrlContext = createContext('');\n\nconst User = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { path, url } = useRouteMatch();\n  const { getUserName, getUserSettings } = useContext(DataStoreContext);\n  const userName = getUserName(userId);\n  const settings = getUserSettings(userId);\n\n  const agreementMatch = useRouteMatch(\"/user/:userid/agreement\");\n  if (!settings.pa && !agreementMatch?.isExact) {\n    return (<Redirect to={`${url}/agreement`} />);\n  }\n\n  return (\n    <div className=\"user\">\n      <UserBaseUrlContext.Provider value={url}>\n        <Switch>\n          <Route path={`${path}/agreement`}>\n            <Agreement />\n          </Route>\n          <Route path={`${path}/instructions`}>\n            <Instructions />\n          </Route>\n          <Route path={`${path}/game/:mode/:questionset/:count`}>\n            <Game />\n          </Route>\n          <Route path={`${path}/report`}>\n            <Report />\n          </Route>\n          <Route path={`${path}/settings`}>\n            <Settings />\n          </Route>\n          <Route path={`${path}/home`}>\n            <div className=\"user__header\">\n              <Link className={`link-button link-button--app user__user-list`} to=\"/users\"><FontAwesomeIcon icon={faUsers}/></Link>\n              <span className=\"user__greeting\">Welcome {userName}!</span>\n              <Link className={`link-button link-button--app user__instructions`} to={`${url}/instructions`}><FontAwesomeIcon icon={faQuestion}/></Link>\n            </div>\n            <div className=\"user__mode-list\">\n              { (Object.keys(Mode) as (keyof typeof Mode)[]).filter(m => m !== Mode.none).map(m => (<ModeLinks key={m} mode={m} />))}\n            </div>\n            <Link className=\"link-button link-button--medium link-button--app\" to={`${url}/settings`}><FontAwesomeIcon icon={faUserCog}/><span>Settings</span></Link>\n            { userName === \"Snappy_Snappy\" ? <div className=\"easter-egg\">CodingStuffs_Yea=Snappy_Snappy idk;what:im.doing</div> : null }\n          </Route>\n          <Redirect to={`${url}/home`} />\n        </Switch>\n      </UserBaseUrlContext.Provider>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport './App.css';\nimport Users from './users';\nimport User from './user';\nimport Confetti from './confetti';\nimport DataStore from './dataStore';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Confetti>\n        <DataStore>\n          <HashRouter>\n            <Switch>\n              <Route path={'/user/:userId'}>\n                <User />\n              </Route>\n              <Route path=\"/users\">\n                <Users />\n              </Route>\n              <Redirect to=\"/users\" />\n            </Switch>\n          </HashRouter>\n        </DataStore>\n      </Confetti>\n    </div>\n  )\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}